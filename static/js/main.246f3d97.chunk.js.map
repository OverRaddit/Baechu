{"version":3,"sources":["Components/Sidebar/profile.png","Images/baechu.png","Images/profile.png","Images/board.png","fbase.js","Components/Sidebar/Sidebar.js","Components/GNB/index.js","Components/Header/index.js","Components/Card/index.js","Components/Card/index2.js","Pages/Home.js","Pages/Login.js","Components/TweetBox/Tweet.js","Components/TweetBox/TweetFactory.js","Components/ViewClub.js","Components/MyPageInfo/index.js","Pages/MyPage.js","Components/InfoBox/Mapexample.js","Components/InfoBox/MapSearch.js","Components/InfoBox/index.js","Pages/UserInfo.js","Components/Distance.js","Components/BoardCard/index.js","Pages/Board.js","Components/CreateClub/index.js","Components/TweetBox/createBoard.js","Pages/Routes.js","Pages/Main.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","setPersistence","Auth","Persistence","SESSION","firebaseInstance","authService","dbService","storageService","Sidebar","className","type","id","for","href","src","imgfile","alt","GNB","isLoggedIn","tabular","to","onClick","signOut","categories","name","images","desc","Header","size","window","history","push","logo","icon","placeholder","fluid","map","item","i","Item","key","Card","list","Card2","attachmentUrl","creator","width","height","distance","kakao","Home","userObj","useState","clubs","setClubs","currentUser","setIsLoggedIn","useEffect","onAuthStateChanged","user","collection","onSnapshot","snapshot","clubArray","docs","doc","getDistance","data","lat","lng","console","log","linePath","maps","LatLng","Polyline","path","getLength","toFixed","Sticky","tableList","card","Login","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","prev","autoComplete","required","htmlFor","Tweet","tweetObj","creatorId","text","readOnly","style","backgroundImage","TweetFactory","clubObj","tweet","setTweet","attachment","setAttachment","userName","displayName","userPhotoURL","photoURL","attachmentRef","ref","child","userId","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","uid","club","add","accept","File","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","faTimes","ViewClub","match","ClubObj","setClubObj","tweets","setTweets","isMember","setIsMember","where","params","clubName","orderBy","tweetArray","e","memberInfo","member","0","MyPageInfo","logo2","Mypage","Map","searchPlace","infowindow","InfoWindow","zIndex","location","setLocation","setLat","setLng","update","userLocation","container","document","getElementById","options","center","level","ps","services","Places","Geocoder","displayMarker","place","marker","Marker","position","y","x","addListener","mouseEvent","setContent","place_name","open","getPosition","getLat","getLng","close","keywordSearch","status","pagination","Status","OK","bounds","LatLngBounds","length","extend","setBounds","MapSearch","setPlace","input","setInput","InfoBox","title","option","UserInfo","Distance","setDistance","mapContainer","mapOption","strokeWeight","strokeColor","strokeOpacity","strokeStyle","BoardCard","likeArr","handleLike","handleUnLike","index","React","infiniteScroll","debounce","Math","max","documentElement","scrollHeight","body","ceil","scrollTop","clientHeight","addEventListener","removeEventListener","includes","color","Board","cardArr","setCardArr","setLikeIdArr","setLikeArr","standard","setStandard","boardArray","likeArray","like","temp","concat","likeData","boardId","filter","CreateClub","setName","setDesc","fileRef","newClub","maxLength","theFile","CreateBoard","board","setBoard","boardObj","Routes","basename","process","exact","component","Main","init","setInit","setUserObj","userInfo","newUser","phoneNumber","isMale","Boolean","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.246f3d97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.8feff939.png\";","module.exports = __webpack_public_path__ + \"static/media/baechu.dd9575f5.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.3d459500.png\";","module.exports = __webpack_public_path__ + \"static/media/board.39306019.png\";","import * as firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAfqV5djtFo724NgMvdr9lMuRdW8lhHG9k\",\r\n  authDomain: \"baechu-e1beb.firebaseapp.com\",\r\n  databaseURL: \"https://baechu-e1beb.firebaseio.com\",\r\n  projectId: \"baechu-e1beb\",\r\n  storageBucket: \"baechu-e1beb.appspot.com\",\r\n  messagingSenderId: \"1076266227992\",\r\n  appId: \"1:1076266227992:web:27b0ba14cc01459df8666d\",\r\n  measurementId: \"G-GK4XSNZSFV\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React from 'react';\r\nimport \"./Sidebar.scss\";\r\nimport imgfile from './profile.png';\r\n\r\nconst Sidebar = () => {\r\n\r\n    return (\r\n    <div className=\"all\">\r\n        <input type=\"checkbox\" id=\"check\"/>\r\n        <header>\r\n            <label for=\"check\">\r\n                <i className=\"fas fa-bars\" id=\"sidebar_btn\"></i>\r\n            </label>\r\n            <div className=\"left_area\">\r\n                <h3>배추터</h3>\r\n            </div>\r\n            <div className=\"right_area\">\r\n                <a href=\"#\" className=\"logout_btn\">Logout</a>\r\n            </div>\r\n        </header>\r\n        <div className=\"sidebar\">\r\n            <center>\r\n                <img src={imgfile} className=\"profile_image\" alt=\"userpic\" />\r\n                <h4>user_name</h4>\r\n            </center>\r\n            <a href=\"#\"><i className=\"fas fa-home\"></i><span>HOME</span></a>\r\n            <a href=\"#\"><i className=\"fas fa-user-circle\"></i><span>마이페이지</span></a>\r\n            <a href=\"#\"><i className=\"fas fa-comments\"></i><span>내 채팅</span></a>\r\n            <a href=\"#\"><i className=\"fas fa-headset\"></i><span>고객센터</span></a>\r\n            <a href=\"#\"><i className=\"fas fa-sliders-h\"></i><span>Settings</span></a>\r\n        </div>\r\n        <div className=\"content\"></div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport List from 'semantic-ui-react/dist/commonjs/collections/Menu';\r\nimport {Link} from 'react-router-dom'\r\nimport './index.scss';\r\nimport { authService } from '../../fbase';\r\nimport Sidebar from 'Components/Sidebar/Sidebar';\r\n\r\nconst GNB = ({isLoggedIn}) => {\r\n    const onLogOutClick = () => authService.signOut();\r\n    return(\r\n        <div className=\"GNB\">\r\n            <List className=\"GNB__Inner\" tabular>\r\n            {isLoggedIn?\r\n                    (<>\r\n                        <Link className=\"item\" to=\"/Mypage\">MY PAGE</Link>\r\n                        <Link className=\"item\" to=\"/createClub\">CREATE CLUB</Link>\r\n                        <Link className=\"item\" to=\"/distance\">거리 연습공간</Link>\r\n                    </>):\r\n                    <Link className=\"item\" to=\"/Login\">JoIn&Login</Link>\r\n                }\r\n                <Link className=\"item\" to=\"/Board\">BOARD</Link>\r\n                <Link className=\"item\" to=\"/Q&A\">Q&A</Link>\r\n\r\n                {isLoggedIn && <button className=\"item\" onClick={onLogOutClick}>Log Out</button> }    \r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GNB;\r\n\r\n","import React from 'react';\r\nimport Icon from 'semantic-ui-react/dist/commonjs/elements/Icon';\r\nimport Input from 'semantic-ui-react/dist/commonjs/elements/Input';\r\nimport List from 'semantic-ui-react/dist/commonjs/collections/Menu';\r\nimport logo from \"../../Images/baechu.png\";\r\n\r\nimport './index.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// 백엔드 존재시 통신해서 가져올 데이터 (dummy data)\r\nconst categories = [\r\n  {\r\n    name:\"우리동네 취미\",\r\n    to:\"/createClub\",\r\n    images:[\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n    ]\r\n  },\r\n  {\r\n    name:\"개설\",\r\n    to:\"/createClub\",\r\n    images:[\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"},\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"}\r\n    ]\r\n  },\r\n  {\r\n    name:\"내가 찜한 게시물\",\r\n    to:\"\",\r\n    images:[\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"}\r\n\r\n    ]\r\n  },\r\n  {\r\n    name:\"게시글 작성\",\r\n    to:\"/createBoard\",\r\n    images:[\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"}\r\n\r\n    ]\r\n  },\r\n]\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n        <div className=\"Header\">\r\n            <div className=\"Header__Inner\">\r\n                <Icon className=\"menu\" name='bars' size=\"big\"/>\r\n                <div className=\"Header__Inner__center\" onClick={() => window.history.push('/')}>\r\n                  <span>배추터</span>\r\n                  <img src={logo} />\r\n                </div>\r\n                <Input \r\n                    icon={<Icon name='search' />}\r\n                    type='text'\r\n                    name='search'\r\n                    placeholder={\"search\"}\r\n                    fluid\r\n                />\r\n            </div>\r\n        \r\n        </div>\r\n        <List className=\"table\">\r\n            {categories.map((item, i)=> \r\n            <List.Item key={i}>\r\n              <Link to={item.to}>{item.name}</Link>\r\n            </List.Item>\r\n            )}\r\n        </List>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Icon from 'semantic-ui-react/dist/commonjs/elements/Icon';\r\n\r\nimport \"./index.scss\";\r\n\r\nconst Card = ({item}) => {\r\n\r\n    const {name, images} = item;\r\n\r\n    return (\r\n        <div className=\"Card\">\r\n            <div className=\"Card__header\">\r\n                <span>{name}</span>\r\n                <span>전체보기 <Icon name=\"angle right\" /></span>\r\n            </div>\r\n            <div className=\"Card__content\">\r\n                {images.map((list,i) => \r\n                    <div className=\"Card_content__item\" key={i}>\r\n                        <img className=\"Card__content__item__img\" key={i} src={list.src} alt=\"testtest\"/>\r\n                        <div className=\"Card__content__item__desc\">{list.desc}</div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Icon from 'semantic-ui-react/dist/commonjs/elements/Icon';\r\n\r\nimport \"./index.scss\";\r\n\r\nconst Card2 = ({item}) => {\r\n\r\n    const {name, attachmentUrl, desc, creator} = item;\r\n\r\n    return (\r\n        <div className=\"Card\">\r\n            <div className=\"Card__header\">\r\n                <span>동아리 모음집</span>\r\n                <span>전체보기 <Icon name=\"angle right\" /></span>\r\n            </div>\r\n            <div className=\"Card__content\">\r\n            {item.map((list,i) => \r\n                <div className=\"Card_content__item\" key={i}>\r\n                    <img width=\"300px\" height=\"300px\" className=\"Card__content__item__img\" src={list.attachmentUrl} alt=\"test\"/>\r\n                    <div className=\"Card__content__item__desc\">\r\n                        {list.desc}\r\n                        <br/>\r\n                        {list.distance} Km\r\n                    </div>\r\n                    <Link to={`/viewClub/${list.name}`}><span>{list.name}</span></Link>\r\n                </div>\r\n            )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card2;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport GNB from \"../Components/GNB\";\r\nimport Header from \"../Components/Header\";\r\nimport Card from \"../Components/Card\";\r\nimport { authService, dbService } from 'fbase';\r\nimport Card2 from 'Components/Card/index2';\r\nimport Sidebar from 'Components/Sidebar/Sidebar';\r\nimport { Sticky } from 'semantic-ui-react';\r\n\r\n\r\n\r\n// 백엔드 존재시 통신해서 가져올 데이터 (dummy data)\r\nconst categories = [\r\n  { \r\n    name:\"우리동네 취미\",\r\n    images:[\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n    ]\r\n  }, \r\n  { \r\n    name:\"홈취미 & DIY 키트\", \r\n    images:[\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n    ]\r\n  },\r\n  { \r\n    name:\"BEST\", \r\n    images:[\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n    ]\r\n    \r\n  },\r\n]\r\nconst { kakao } = window;\r\n\r\n\r\nconst Home = ({ userObj }) => {\r\n  // 이렇게 형태를 지정하지 않은 Object는 출력도 안되고 입력도 안된다. map은 먹히던데 그건 왜 되는건지 모르겠음.\r\n  // 니코쌤이 뭐라 하셨던거 같기도 한데 찾아봐야 겠다.\r\n  const [clubs,setClubs] = useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\r\n  const [distance,setDistance] = useState(\"\");\r\n  \r\n  useEffect( ()=>{\r\n    authService.onAuthStateChanged( (user) => {\r\n      if (user){\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n      //setInit(true);\r\n    });\r\n\r\n    // 어느 순서로 가져와야 할지 미정.\r\n    dbService.collection(\"club\")\r\n      .onSnapshot((snapshot)=>{\r\n\r\n        const clubArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          //distance: getDistance(doc.lat, doc.lng),\r\n          distance: getDistance(doc.data().lat,doc.data().lng),\r\n          ...doc.data(),\r\n        }));\r\n        console.log(clubArray);\r\n        setClubs(clubArray);\r\n      });\r\n  }, []);\r\n\r\n  const getDistance = ( lat,lng ) => {\r\n    \r\n    var linePath = [\r\n      new kakao.maps.LatLng(userObj.lat, userObj.lng),\r\n      new kakao.maps.LatLng(lat, lng)\r\n    ];\r\n    var polyline = new kakao.maps.Polyline({\r\n        path: linePath,\r\n    });\r\n    var distance = (polyline.getLength())/1000;\r\n    return distance.toFixed(2);\r\n  };\r\n    \r\n  return (\r\n    <>\r\n    <div className=\"Home\">\r\n      <Sticky>\r\n        <GNB isLoggedIn={isLoggedIn} />\r\n      </Sticky>\r\n      <Header tableList={categories}/>\r\n      <Card2 item={clubs} key=\"1\" />\r\n      {categories.map((card,i) => <Card key={i} item={card} />)}\r\n      \r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { firebaseInstance } from \"../fbase\";\r\n\r\nimport '../Style/login.css';\r\n\r\nconst Login =() =>{\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    //const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if (name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            if(newAccount){\r\n                //join Logic\r\n                await authService.createUserWithEmailAndPassword(email,password);\r\n            } else{\r\n                //log in Logic\r\n                await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n    }\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <section className=\"login-form\">\r\n            <span onClick={toggleAccount}>\r\n                <h1>{(newAccount) ? \"JOIN\" : \"LOGIN\"}</h1>\r\n            </span>\r\n            <h2>{error}</h2>\r\n            <div className=\"cabbage\">\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/765/765618.svg\"/>\r\n            </div>\r\n            <form onSubmit = {onSubmit}>\r\n                <div className=\"int-area\">\r\n                    <input type=\"text\" name=\"email\" id=\"id\"\r\n                    autoComplete=\"off\" onChange={onChange} required/>\r\n                    <label htmlFor=\"id\"> USER NAME</label>\r\n                 </div>\r\n                <div className=\"int-area\">\r\n                    <input type=\"password\" name=\"password\" id=\"pw\"\r\n                    autoComplete=\"off\" onChange={onChange} required/>\r\n                    <label htmlFor=\"pw\"> PASSWORD</label>\r\n                </div>\r\n                <div className=\"btn-area\">\r\n                    <button type=\"submit\">{(newAccount) ? \"Join\" : \"Login\"}</button> <br/><br/>\r\n                </div>\r\n            </form>\r\n            <div className=\"caption\">\r\n                 <a href=\"\"> Forgot Password?</a>\r\n            </div>\r\n            <button type=\"submit\" onClick={onSocialClick} name=\"google\">by Google</button> <br/><br/>\r\n            <button type=\"submit\" onClick={onSocialClick} name=\"github\">by Github </button>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport './posting_style.scss';\r\nconst Tweet = ({ tweetObj }) => {\r\n\r\n    return(\r\n        <div className=\"all\">\r\n        <form>\r\n            <section className=\"input_text\">\r\n                {\r\n                    //uid로 auth user에 접근할 방법이 없음,,, 작성자 프사는 userdocument를 참조해야함,,,\r\n                }\r\n                <div className=\"cabbage\">\r\n                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/765/765618.svg\"/>\r\n                </div>\r\n                <div className=\"profile\">\r\n                    { false ? (\r\n                        <img src={tweetObj.attachmentUrl} alt=\"userphotoURL\" width=\"100px\" height=\"100px\"/>\r\n                    ) : (\r\n                        <a href=\"#\">\r\n                        <i className=\"fas fa-user-circle profile fa-3x\"/>\r\n                    </a>\r\n                    )}\r\n                \r\n                </div>\r\n\r\n                <div className=\"user_name\">\r\n                    <h3>{tweetObj.creatorId}</h3>\r\n                </div>\r\n\r\n                <div>\r\n                    <textarea \r\n                        placeholder=\"당신의 멋진 취미는 무엇인가요?\"\r\n                        value={tweetObj.text}\r\n                        type=\"text\"\r\n                        readOnly\r\n                    />\r\n                </div>\r\n\r\n                {tweetObj.attachmentUrl && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                        src={tweetObj.attachmentUrl}\r\n                        style={{\r\n                            backgroundImage: tweetObj.attachmentUrl,\r\n                        }}\r\n                        width = \"200px\" height = \"150px\"\r\n                        />\r\n                    </div>\r\n                )}\r\n            </section>\r\n        </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tweet;","import { authService,dbService,storageService } from 'fbase';\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport React, { useState } from 'react';\r\nimport './posting_style.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory= ({clubObj}) => {\r\n    const userObj = authService.currentUser;\r\n    const [tweet, setTweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    // 닉네임 존재시 출력, 없을 시 이메일을 이름으로;\r\n    const userName = authService.currentUser.displayName ?\r\n        authService.currentUser.displayName:\r\n        authService.currentUser.email;\r\n    const userPhotoURL = authService.currentUser.photoURL;\r\n    \r\n    const onSubmit = async(event) => {\r\n        // 사진이나 트윗 모두 비어있다면 작동x\r\n        if(tweet === \"\" && attachment === \"\")\r\n            return;\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            // 사진을 storage에 업로드, response에서 업로드된 url을 찾아 attachmentUrl에 저장\r\n            const attachmentRef = storageService.ref().child(`${userObj.userId}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment,\"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        const tweetObj = {\r\n            text: tweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n            club: clubObj.name,\r\n        }\r\n        await dbService.collection(\"tweets\").add(tweetObj);\r\n        setTweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value}\r\n        } = event;\r\n        setTweet(value);\r\n    }\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const File = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const{\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(File);\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return(\r\n        <div className=\"all\">\r\n        <form onSubmit={onSubmit}>\r\n            <section className=\"input_text\">\r\n                <h1>게시물 작성</h1>\r\n                <div className=\"cabbage\">\r\n                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/765/765618.svg\"/>\r\n                </div>\r\n                {\r\n                    //프사를 클릭하면 user정보를 보는 폼으로 넘어가게!\r\n                }\r\n                <div className=\"profile\">\r\n                    { userPhotoURL ? (\r\n                        <img src={userPhotoURL} alt=\"userphotoURL\" width=\"100px\" height=\"100px\"/>\r\n                    ) : (\r\n                        <a href=\"#\">\r\n                        <i className=\"fas fa-user-circle profile fa-3x\"/>\r\n                    </a>\r\n                    )}\r\n                    \r\n                    \r\n                </div>\r\n\r\n                <div className=\"user_name\">\r\n                    <h3>{userName}</h3>\r\n                </div>\r\n\r\n                <div>\r\n                    <textarea \r\n                        placeholder=\"당신의 멋진 취미는 무엇인가요?\"\r\n                        value={tweet}\r\n                        onChange={onChange}\r\n                        type=\"text\"\r\n                    />\r\n                    \r\n                </div>\r\n                \r\n                <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                    <span>Add Photo</span>\r\n                    <i className=\"fas fa-images images fa-lg\"></i>\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onFileChange}\r\n                />\r\n\r\n                {attachment && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                        width = \"200px\" height = \"150px\"\r\n                        />\r\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                            <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"btn-area\">\r\n                    <input type=\"submit\" value=\"게시\"/>\r\n                </div>\r\n            </section>\r\n        </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TweetFactory;","import { authService, dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport GNB from './GNB';\r\nimport Header from './Header';\r\nimport Tweet from './TweetBox/Tweet';\r\nimport TweetFactory from './TweetBox/TweetFactory';\r\n\r\nconst ViewClub = ({ match }) => {\r\n    const [ClubObj, setClubObj] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [isMember,setIsMember] = useState(false);\r\n\r\n    useEffect( ()=> {\r\n        dbService.collection(\"club\")\r\n        .where(\"name\",\"==\",match.params.clubName)\r\n        .onSnapshot((snapshot)=>{\r\n            const clubArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n              }));\r\n              setClubObj(clubArray[0]);\r\n        });\r\n\r\n        dbService.collection(\"tweets\")\r\n        .where(\"club\",\"==\",match.params.clubName)\r\n        .orderBy(\"createdAt\",\"desc\")\r\n        .onSnapshot((snapshot)=>{\r\n            const tweetArray = snapshot.docs.map((doc)=>({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setTweets(tweetArray);\r\n            console.log(tweetArray);\r\n        });\r\n        \r\n\r\n        // 로그인한 유저가 동아리의 멤버인지 판단\r\n        dbService.collection(\"member\")\r\n        .where(\"club\",\"==\",match.params.clubName)\r\n        .where(\"member\",\"==\",authService.currentUser.uid)\r\n        .onSnapshot((snapshot)=>{\r\n            const isMember = snapshot.docs.map((doc)=>({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            \r\n            setIsMember(isMember);\r\n        })\r\n\r\n    }, []);\r\n    \r\n    const onSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const memberInfo = {\r\n            club: ClubObj.name,\r\n            member: authService.currentUser.uid\r\n        }\r\n\r\n        await dbService.collection(\"member\").add(memberInfo);\r\n        setIsMember({0: true});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <GNB isLoggedIn={true}/>\r\n            <Header />\r\n            <div>\r\n                <h1>{ClubObj.name}</h1>\r\n                <img src={ClubObj.attachmentUrl} width=\"100px\" height=\"100px\"/>\r\n                <p>{ClubObj.desc}</p>\r\n                <h4>창립자:{ClubObj.creator}</h4>\r\n            </div>\r\n\r\n            { isMember[0] ? \r\n                // 멤버일 경우 게시글 작성폼\r\n                <TweetFactory clubObj={ClubObj}/> : \r\n                // 멤버가 아닐시 가입버튼\r\n                <form onSubmit={onSubmit}>\r\n                        <input type=\"submit\"/>\r\n                </form>\r\n            }\r\n            {tweets.map(tweet => (\r\n                <Tweet key={tweet.id} tweetObj={tweet} />\r\n                ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewClub;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\n\r\nimport './index.scss';\r\n\r\nimport logo from \"../../Images/profile.png\"\r\nimport logo2 from \"../../Images/board.png\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MyPageInfo = ({userObj}) => {\r\n\r\n  return (\r\n    <div className=\"MyPageInfo\">\r\n      {userObj.userId}\r\n      <h1><u>MY PAGE</u></h1>\r\n        <div className=\"MyPageInfo__box\">\r\n          <div className=\"MyPageInfo__box__img\">\r\n            <img src={logo} alt=\"프로필 관리\" />\r\n            <p>주소지 변경</p>\r\n            <button><Link to=\"/userInfo\">VIEW MORE</Link></button>\r\n          </div>\r\n          <div className=\"MyPageInfo__box__img\">\r\n            <img src={logo2} alt=\"게시물 관리\" />\r\n            <button>VIEW MORE</button>\r\n            <p>\r\n              내가 쓴글 <br/>\r\n              게시물 작성\r\n            </p>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPageInfo;","import React from 'react';\r\nimport Sticky from 'semantic-ui-react/dist/commonjs/modules/Sticky';\r\n\r\nimport GNB from \"../Components/GNB\";\r\nimport Header from \"../Components/Header\";\r\nimport Card from \"../Components/Card\";\r\nimport MyPageInfo from \"../Components/MyPageInfo\"\r\n\r\nconst Mypage = ({ userObj }) => {\r\n  return (\r\n    <>\r\n      <GNB isLoggedIn={userObj} />\r\n      <Header />\r\n      <MyPageInfo userObj={userObj}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mypage;","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\"\r\nimport \"./index.scss\";\r\n\r\nconst { kakao } = window\r\nconst Map = ({ searchPlace,userObj }) => {\r\n    let infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n    const [location,setLocation] = useState(\"\");\r\n    const [lat,setLat] = useState(\"\");\r\n    const [lng,setLng] = useState(\"\");\r\n\r\n    const onSubmit = async(event) => {\r\n        if((lat === \"\") || (lng === \"\")){\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        \r\n        await dbService.doc(`user/${userObj.id}`).update({\r\n            lat,\r\n            lng\r\n        });\r\n        setLat(\"\");\r\n        setLng(\"\");\r\n        setLocation(\"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        const container = document.getElementById(\"mymap\");\r\n        let userLocation;\r\n        \r\n        if (userObj.lat === null || userObj.lng === null){\r\n            userLocation = new kakao.maps.LatLng(33.450701, 126.570667);\r\n            console.log(\"기본맵을출력\");\r\n        } else {\r\n            userLocation =new kakao.maps.LatLng(\r\n                userObj.lat,\r\n                userObj.lng\r\n                );\r\n            console.log(\"사용자의 위치를 중심으로\");\r\n            console.log(userObj.lat);\r\n            console.log(userObj.lng);\r\n        }\r\n        \r\n        const options = {\r\n            center: userLocation,\r\n            level: 3,\r\n            };\r\n       \r\n        const map = new kakao.maps.Map(container, options);\r\n\r\n        // 장소 검색 객체를 생성\r\n        const ps = new kakao.maps.services.Places(); \r\n\r\n        // 주소-좌표 변환 객체를 생성합니다\r\n        var geocoder = new kakao.maps.services.Geocoder();\r\n\r\n        // 키워드로 장소를 검색\r\n        ps.keywordSearch(searchPlace, placesSearchCB);\r\n\r\n        // 키워드 검색 완료 시 호출되는 콜백함수\r\n        function placesSearchCB (data, status, pagination) {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n                // LatLngBounds 객체에 좌표를 추가\r\n                let bounds = new kakao.maps.LatLngBounds();\r\n\r\n                for (let i=0; i<data.length; i++) {\r\n                    displayMarker(data[i]);    \r\n                    bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n                }       \r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정\r\n                map.setBounds(bounds);\r\n            } \r\n        }\r\n        /*\r\n        // 주소 가져오는 부분\r\n        kakao.maps.event.addListener(map, 'click', function(mouseEvent) {\r\n            searchDetailAddrFromCoords(mouseEvent.latLng, function(result, status) {\r\n                if (status === kakao.maps.services.Status.OK) {\r\n                    var detailAddr = !!result[0].road_address ? '<div>도로명주소 : ' + result[0].road_address.address_name + '</div>' : '';\r\n                    detailAddr += '<div>지번 주소 : ' + result[0].address.address_name + '</div>';\r\n                    \r\n                    var content = '<div class=\"bAddr\">' +\r\n                                    '<span class=\"title\">법정동 주소정보</span>' + \r\n                                    detailAddr + \r\n                                '</div>';\r\n        \r\n                    // 마커를 클릭한 위치에 표시합니다 \r\n                    marker.setPosition(mouseEvent.latLng);\r\n                    marker.setMap(map);\r\n        \r\n                    // 인포윈도우에 클릭한 위치에 대한 법정동 상세 주소정보를 표시합니다\r\n                    infowindow.setContent(content);\r\n                    infowindow.open(map, marker);\r\n                }   \r\n            });\r\n        });\r\n        */\r\n        // 지도에 마커를 표시하는 함수\r\n        function displayMarker(place) {\r\n            \r\n            // 마커를 생성하고 지도에 표시\r\n            let marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: new kakao.maps.LatLng(place.y, place.x) \r\n            });\r\n        \r\n\r\n            // 클릭이벤트\r\n            kakao.maps.event.addListener(marker, 'click', function(mouseEvent) {\r\n                infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\r\n                infowindow.open(map, marker);\r\n\r\n                // 위치 정보 등록\r\n                setLocation(place.place_name);\r\n                setLat(marker.getPosition().getLat());\r\n                setLng(marker.getPosition().getLng());\r\n            });\r\n            kakao.maps.event.addListener(marker, 'mouseover', function() {\r\n                infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\r\n                infowindow.open(map, marker);\r\n            });\r\n            kakao.maps.event.addListener(marker, 'mouseout', function() {\r\n                infowindow.close();\r\n            });\r\n\r\n        }\r\n        function searchDetailAddrFromCoords(coords, callback) {\r\n            // 좌표로 법정동 상세 주소 정보를 요청합니다\r\n            geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);\r\n        }\r\n    }, [searchPlace])\r\n    \r\n  return (\r\n      <>\r\n        <div className=\"InfoBox__input\">\r\n            <div className=\"InfoBox__input__address\"><input/> - <button>우편번호</button></div>\r\n                <input/><span>기본주소</span><br/>\r\n                <input/><span>나머지 주소</span>\r\n            \r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"text\" value={location} readOnly required/>\r\n                <input type=\"submit\" value=\"현재 위치로 저장\"/>\r\n            </form>\r\n            <div \r\n            id=\"mymap\"\r\n            style={{ \r\n                    width: '700px', \r\n                    height: '500px'\r\n            }}\r\n            />\r\n            <br></br>\r\n        </div>\r\n     </>\r\n  );\r\n}\r\nexport default Map;","import React, { useState } from \"react\";\r\nimport Map from './Mapexample'\r\n\r\n\r\nconst MapSearch = ({ userObj }) => {\r\n    const [place, setPlace] = useState(\"\");\r\n    const [input, setInput] = useState(\"\");\r\n    const onChange = (event) => {\r\n       const {\r\n           target: {value},\r\n       } = event;\r\n       setInput(value);\r\n    }\r\n\r\n    const onSubmit = (event) =>{\r\n        if(input === \"\"){\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        setPlace(input);\r\n        setInput(\"\");\r\n    } \r\n    return (\r\n        <div>\r\n            <Map searchPlace={place} userObj={userObj}/>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                name=\"input\"\r\n                placeholder = \"장소를 검색해주세요!\"\r\n                type = \"text\"\r\n                onChange={onChange}\r\n                value={input}\r\n                />\r\n            \r\n                <button type=\"submit\">검색</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MapSearch;","import MapSearch from 'Components/InfoBox/MapSearch';\r\nimport React from 'react';\r\n\r\nimport \"./index.scss\";\r\n\r\nconst InfoBox = ({userObj, title, desc, option}) => {\r\n  return(\r\n    <div className=\"InfoBox\">\r\n      <div className={option === \"address\" ? \"InfoBox__title__address\" : \"InfoBox__title\"}>{title}</div>\r\n      {option === 'phone' && <div className=\"InfoBox__input__call\"><input/> - <input/> - <input/></div>}\r\n      {option === \"address\" &&\r\n        <MapSearch userObj={userObj}/>\r\n      }\r\n      {option === \"gender\" &&\r\n      <div className=\"InfoBox__input\">\r\n        <label><input type=\"radio\" />남성</label>\r\n        <label><input type=\"radio\" />여성</label>\r\n      </div>\r\n    }\r\n      {option === \"birth\" && <div className=\"InfoBox__input\"><input /><span>8자리 ex)20000524</span></div>}\r\n      {option !== \"phone\" && option !== \"address\" && option !== \"gender\" &&\r\n        <div className=\"InfoBox__input\">\r\n          <input/><span>{desc}</span>\r\n        </div>\r\n      }\r\n    </div>\r\n)}\r\n\r\nexport default InfoBox;","import React from 'react';\r\nimport GNB from \"../Components/GNB\";\r\nimport Header from \"../Components/Header\";\r\nimport InfoBox from \"../Components/InfoBox\";\r\n\r\nimport \"../Style/info.scss\"\r\n\r\nconst UserInfo = ({userObj}) => {\r\n  return (\r\n    <div className=\"UserInfo\">\r\n      <GNB />\r\n      <Header />\r\n      <h2>HOME>회원정보수정</h2>\r\n      <h1 className=\"normal__info\">기본정보</h1>\r\n      <div>\r\n        <InfoBox title={\"이메일\"} />\r\n        <InfoBox title={\"현재 비밀번호\"} />\r\n        <InfoBox title={\"비밀번호\"} />\r\n        <InfoBox title={\"비밀번호확인\"} />\r\n        <InfoBox title={\"휴대전화\"} option={\"phone\"}/>\r\n        <InfoBox title={\"주소\"} option={\"address\"} userObj={userObj}/>\r\n        \r\n      </div>\r\n      <h1 className=\"additional__info\">추가정보</h1>\r\n      <div>\r\n        <InfoBox title={\"성별\"} option={\"gender\"}/>\r\n        <InfoBox title={\"생년월일\"} option={\"birth\"}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserInfo;","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst { kakao } = window\r\n\r\n\r\nconst Distance = ({ userObj, clubObj}) => {\r\n    const [distance,setDistance] = useState(\"\");\r\n\r\n    useEffect(()=> {\r\n        var mapContainer = document.getElementById('map'), // 지도를 표시할 div  \r\n        mapOption = { \r\n        center: new kakao.maps.LatLng(33.452344169439975, 126.56878163224233), // 지도의 중심좌표\r\n        level: 3 // 지도의 확대 레벨\r\n        };\r\n\r\n        var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\r\n\r\n        var linePath = [\r\n            // 하나는 사용자의 위치정보\r\n            new kakao.maps.LatLng(33.452344169439975, 126.56878163224233),\r\n\r\n            // 나머지 하나는 해당 동아리의 위치정보\r\n            new kakao.maps.LatLng(33.452739313807456, 126.5709308145358)\r\n        ];\r\n\r\n        var polyline = new kakao.maps.Polyline({\r\n            path: linePath, // 선을 구성하는 좌표배열 입니다\r\n            strokeWeight: 5, // 선의 두께 입니다\r\n            strokeColor: '#FFAE00', // 선의 색깔입니다\r\n            strokeOpacity: 0.7, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n            strokeStyle: 'solid' // 선의 스타일입니다\r\n        });\r\n        //polyline.setMap(map);\r\n\r\n        var distance = polyline.getLength();\r\n        console.log(distance);\r\n        setDistance(distance);\r\n    },[]);\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"map\" style={{width:\"100%\",height:\"350px\" }}></div>  \r\n            <p>\r\n                <em>지도를 마우스로 클릭하면 선 그리기가 시작되고<br/>오른쪽 마우스를 클릭하면 선 그리기가 종료됩니다</em>\r\n            </p>\r\n            {distance} 이다!\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Distance;","import React from 'react';\r\nimport produce from 'immer';\r\nimport debounce from 'lodash/debounce';\r\nimport Icon from 'semantic-ui-react/dist/commonjs/elements/Icon';\r\n\r\nimport \"./index.scss\";\r\n\r\nconst BoardCard = ({card, likeArr, handleLike, handleUnLike, index}) => {\r\n  const [isLike, setIsLike] = React.useState(false);\r\n\r\n  // debounce란?? 무조건 발동되는게 아니라 한번 발동되면 쿨타임이 존재하는 함수다.\r\n  const infiniteScroll = debounce(() => {\r\n    const scrollHeight = Math.max(\r\n      document.documentElement.scrollHeight,\r\n      document.body.scrollHeight,\r\n    );\r\n\r\n    // scrollTop은 소수점이 발생하여 올림 적용\r\n    const scrollTop = Math.ceil(Math.max(\r\n      document.documentElement.scrollTop,\r\n      document.body.scrollTop,\r\n    ));\r\n\r\n    const { clientHeight } = document.documentElement;\r\n    // if (scrollTop + clientHeight + 50 > scrollHeight) ;\r\n  }, 100);\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('scroll', infiniteScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', infiniteScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"BoardCard\">\r\n    {likeArr.includes(card)  ?\r\n        <Icon name='heart' size=\"big\" color=\"green\" onClick={()=> handleUnLike({id: card.id})}/> :\r\n        <Icon name='heart outline' size=\"big\" color=\"green\" onClick={()=> handleLike({card})}/>\r\n    }\r\n      <img src={card.attachmentUrl?card.attachmentUrl:\"images/test1.png\"} alt=\"이미지\"/>\r\n      <div className=\"BoardCard__text\">{card.text}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardCard;","import React, { useEffect, useState } from \"react\";\r\n//import Layout from \"Components/Layout\";\r\nimport BoardCard from \"Components/BoardCard\";\r\n\r\nimport \"../Style/board.scss\"\r\nimport { dbService } from \"fbase\";\r\nconst { kakao } = window;\r\n\r\nconst Board = ({userObj}) => {\r\n  const [cardArr, setCardArr] = React.useState([]);\r\n  const [likeIdArr, setLikeIdArr] = React.useState([]);\r\n  const [likeArr, setLikeArr] = React.useState([]);\r\n  const [standard, setStandard] = React.useState('');\r\n\r\n  /*\r\n  React.useEffect(() => {\r\n    fetch('data/board.json').then(res => res.json()).then(res => setCardArr(res));\r\n  },[]);\r\n  */\r\n  \r\n\r\n  useEffect( ()=>{\r\n    dbService.collection(\"board\")\r\n    .orderBy(\"createdAt\",\"desc\")\r\n    .onSnapshot((snapshot)=>{\r\n      const boardArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setCardArr(boardArray);\r\n    });\r\n  },[]);\r\n\r\n    //likeArr를 초기화\r\n    dbService.collection(\"like\")\r\n    .where(\"userId\",\"==\",userObj.userId)\r\n    .onSnapshot((snapshot=>{\r\n      const likeArray = snapshot.docs.map((doc)=>({\r\n        id: doc.id,\r\n        like: true,\r\n        ...doc.data(),\r\n      }));\r\n      setLikeIdArr(likeArray);\r\n    }))\r\n\r\n\r\n  const handleLike = async({card}) => {\r\n      if(!likeArr.includes(card)) {\r\n        //??? 왜 temp를 굳이 선언했을까??\r\n        \r\n        const temp = card;\r\n        temp.like = true;\r\n        setLikeArr(prev => prev.concat(temp));\r\n        \r\n        //card.like = true;\r\n        //setLikeArr(prev => prev.concat(card));\r\n        \r\n        // 하트 누르면 업데이트 잘됨(좋아요 명단에 추가하는걸로 수정해야하지만) 근데 좋아요 눌러도 하트가 안채워짐, 이상하게 2번째 눌러야 하트가 채워진다\r\n        // 근데 2번 눌렀기때문에 좋아요된 게시글을 보면 똑같은 글이 2번 표시된다. 으아아아\r\n        /*\r\n        var newArr = card.like.push(userObj.userId);\r\n        await dbService.doc(`board/${card.id}`).update({\r\n          text: \"좋아요\",\r\n          like: prev => prev.concat(4),\r\n        })\r\n        */\r\n        const likeData = {userId: userObj.userId, boardId: card.id}\r\n        dbService.collection(\"like\").add(likeData);\r\n      }\r\n  }\r\n\r\n  const handleUnLike = ({id}) => {\r\n    // 현재 카드의 id를 가지고 있는 녀석을 LikeArr에서 제거한다.\r\n    setLikeArr(prev => prev.filter(item => item.id !== id));\r\n  }\r\n\r\n  const handleChange = e => {\r\n    setStandard(e.target.value);\r\n  }\r\n\r\n  return (\r\n\r\n      <div className=\"Board\">\r\n        <h1>LEISURE COMMUNITY</h1>\r\n        <p>\r\n          사람을 통해 배우는 취미 연구소\r\n        </p>\r\n        <div className=\"Board__inner\">\r\n          <select value={standard} onChange={handleChange}>\r\n            <option value=\"\">-정렬방식-</option>\r\n            <option value=\"최근순\">최근순</option>\r\n            <option value=\"좋아요\">좋아요</option>\r\n          </select>\r\n          <div className=\"Board__inner__Cards\">\r\n            {standard === '좋아요' ?\r\n            likeArr.map((item,i) =>\r\n            <BoardCard\r\n                key={i}\r\n                card={item}\r\n                likeArr={likeArr}\r\n                handleLike={handleLike}\r\n                handleUnLike={handleUnLike}\r\n                />)\r\n            :(cardArr || []).map((item, i) =>\r\n              <BoardCard\r\n                key={i}\r\n                card={item}\r\n                likeArr={likeArr}\r\n                handleLike={handleLike}\r\n                handleUnLike={handleUnLike}\r\n                />\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default Board;","import { useState } from \"react\";\r\nimport React from 'react';\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './group_style.scss';\r\nimport GNB from \"Components/GNB\";\r\nimport Header from \"Components/Header\";\r\n\r\nconst CreateClub = ( {userObj} ) => {\r\n    const [name,setName] = useState(\"\");\r\n    const [desc,setDesc] = useState(\"\");\r\n    const [attachment,setAttachment] = useState();\r\n    \r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name,value},\r\n        } = event;\r\n        if(name === \"name\"){\r\n            setName(value);\r\n        } else if(name === \"desc\"){\r\n            setDesc(value);\r\n        } \r\n    }\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        // 사진을 storage에 저장한다.\r\n        const fileRef = storageService.ref().child(`ClubImage/${uuidv4()}`);\r\n        const response = await fileRef.putString(attachment, \"data_url\");\r\n        const attachmentUrl = await response.ref.getDownloadURL();\r\n        // newClub document를 추가해준다.\r\n        const newClub = {\r\n            creator: userObj.userId,\r\n            name,\r\n            desc,\r\n            attachmentUrl,\r\n            lat: userObj.lat,\r\n            lng: userObj.lng,\r\n            createdAt: Date.now(),\r\n          }\r\n        await dbService.collection(\"club\").add(newClub);\r\n        document.location.href = \"../\"\r\n    }\r\n    const onFileChange = (event) =>{\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            // 첨부된 파일의 url정보를 attachment 변수에 저장\r\n            const {\r\n                currentTarget: {result}\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => {\r\n        setAttachment(null);\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <GNB isLoggedIn={userObj} />\r\n        <Header />\r\n        <br></br>\r\n        <div className=\"all\">\r\n            <section className=\"input_text\"> \r\n            <form onSubmit={onSubmit}>\r\n                <h1>동아리 만들기</h1>\r\n                <div className=\"cabbage\">\r\n                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/765/765618.svg\"/>\r\n                </div>\r\n                {attachment &&\r\n                    <div>\r\n                        <img src={attachment} id='output' width=\"150px\" height=\"150px\"/>\r\n                        <input type=\"button\" onClick={onClearAttachment} value=\"사진 지우기\"/>\r\n                    </div>\r\n                }\r\n                <div className=\"name-area\">\r\n                    <label htmlFor=\"name\"> 동아리 이름</label>\r\n                    <input\r\n                    name=\"name\"\r\n                    value={name} onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder = \"클럽명을 적어주세요!\" maxLength={120}\r\n                    autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"int-area\">\r\n                    <textarea\r\n                    name=\"desc\"\r\n                    value={desc}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder = \"동아리에 대한 설명을 해주세요!\"\r\n                    maxLength={250}\r\n                    />\r\n                </div>\r\n                \r\n                <div className=\"name-area\">\r\n                    <label>동아리 이미지</label><i className=\"fas fa-map-marker-alt map\"></i>\r\n                    <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n                </div>\r\n\r\n                <div className=\"btn-area\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n            </form>\r\n            </section>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CreateClub;","import { authService,dbService,storageService } from 'fbase';\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport React, { useState } from 'react';\r\nimport './posting_style.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CreateBoard= () => {\r\n    const userObj = authService.currentUser;\r\n    const [board, setBoard] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    // 닉네임 존재시 출력, 없을 시 이메일을 이름으로;\r\n    const userName = authService.currentUser.displayName ?\r\n        authService.currentUser.displayName:\r\n        authService.currentUser.email;\r\n    const userPhotoURL = authService.currentUser.photoURL;\r\n    \r\n    const onSubmit = async(event) => {\r\n        // 사진이나 트윗 모두 비어있다면 작동x\r\n        if(board === \"\" && attachment === \"\")\r\n            return;\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            // 사진을 storage에 업로드, response에서 업로드된 url을 찾아 attachmentUrl에 저장\r\n            const attachmentRef = storageService.ref().child(`${userObj.userId}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment,\"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        const boardObj = {\r\n            text: board,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n            like: [],\r\n        }\r\n        await dbService.collection(\"board\").add(boardObj);\r\n        setBoard(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value}\r\n        } = event;\r\n        setBoard(value);\r\n    }\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const File = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const{\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(File);\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return(\r\n        <div className=\"all\">\r\n        <form onSubmit={onSubmit}>\r\n            <section className=\"input_text\">\r\n                <h1>게시물 작성</h1>\r\n                <div className=\"cabbage\">\r\n                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/765/765618.svg\"/>\r\n                </div>\r\n                {\r\n                    //프사를 클릭하면 user정보를 보는 폼으로 넘어가게!\r\n                }\r\n                <div className=\"profile\">\r\n                    { userPhotoURL ? (\r\n                        <img src={userPhotoURL} alt=\"userphotoURL\" width=\"100px\" height=\"100px\"/>\r\n                    ) : (\r\n                        <a href=\"#\">\r\n                        <i className=\"fas fa-user-circle profile fa-3x\"/>\r\n                    </a>\r\n                    )}\r\n                    \r\n                    \r\n                </div>\r\n\r\n                <div className=\"user_name\">\r\n                    <h3>{userName}</h3>\r\n                </div>\r\n\r\n                <div>\r\n                    <textarea \r\n                        placeholder=\"당신의 멋진 취미는 무엇인가요?\"\r\n                        value={board}\r\n                        onChange={onChange}\r\n                        type=\"text\"\r\n                    />\r\n                    \r\n                </div>\r\n                \r\n                <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                    <span>Add Photo</span>\r\n                    <i className=\"fas fa-images images fa-lg\"></i>\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onFileChange}\r\n                />\r\n\r\n                {attachment && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                        width = \"200px\" height = \"150px\"\r\n                        />\r\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                            <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"btn-area\">\r\n                    <input type=\"submit\" value=\"게시\"/>\r\n                </div>\r\n            </section>\r\n        </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateBoard;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport ViewClub from 'Components/ViewClub';\r\nimport Mypage from './MyPage';\r\nimport UserInfo from './UserInfo';\r\nimport GNB from 'Components/GNB';\r\nimport Header from 'Components/Header';\r\nimport Distance from 'Components/Distance';\r\nimport Board from './Board';\r\nimport Sidebar from 'Components/Sidebar/Sidebar';\r\nimport CreateClub from 'Components/CreateClub';\r\nimport CreateBoard from 'Components/TweetBox/createBoard';\r\n\r\nconst Routes = ({isLoggedIn, userObj}) => {\r\n  return (\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <Switch>\r\n      {isLoggedIn ? (\r\n        <>\r\n        <Route exact path=\"/\">\r\n          <Home userObj={userObj}/>\r\n        </Route>\r\n\r\n        <Route exact path=\"/Mypage\">\r\n          <Mypage userObj={userObj}/>\r\n        </Route>\r\n\r\n        <Route exact path=\"/userInfo\">\r\n          <UserInfo userObj={userObj}/>\r\n        </Route>\r\n\r\n        {\r\n          //2개 이상의 컴포넌트를 넣으면 렉이 걸린다....왜지???\r\n          //GNB,Header,메인컴포넌트 이렇게 넣으면 메인은 작동함\r\n          // 근데 GNB,header의 링크가 작동하지 않음! 왜그럴까...?\r\n        }\r\n        <Route exact path=\"/sidebar\">\r\n          <GNB isLoggedIn={userObj} />\r\n          <Header />\r\n          <Sidebar/>\r\n        </Route>\r\n        \r\n        <Route exact path=\"/createClub\">\r\n          <CreateClub userObj={userObj}/>\r\n        </Route> \r\n\r\n        <Route exact path=\"/viewClub/:clubName\" component={ViewClub} >\r\n    \r\n        </Route>\r\n\r\n        <Route exact path=\"/distance\">\r\n          <Distance />\r\n        </Route>\r\n\r\n        <Route exact path=\"/Board\">\r\n          <GNB isLoggedIn={userObj} />\r\n          <Header />\r\n          <Board userObj={userObj}/>\r\n        </Route>\r\n\r\n        <Route exact path=\"/createBoard\">\r\n          <GNB isLoggedIn={userObj} />\r\n          <Header />\r\n          <CreateBoard />\r\n        </Route>\r\n\r\n        <Route exact path=\"/Q&A\"/>\r\n        </>\r\n      ) : (\r\n        <Route exact path=\"/\">\r\n          <Login/>\r\n        </Route>\r\n      \r\n      )}\r\n      \r\n    </Switch>\r\n  </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;","import React, { useEffect, useState } from 'react';\r\nimport {authService, dbService} from \"../fbase\";\r\nimport Routes from \"./Routes\"\r\nimport Sticky from 'semantic-ui-react/dist/commonjs/modules/Sticky';\r\n\r\nconst Main=() => {\r\n  const[init, setInit] = useState(false)\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect( () =>{\r\n    authService.onAuthStateChanged(async(user) =>{\r\n      if(user){\r\n        await dbService\r\n        .collection(\"user\")\r\n        .where(\"userId\",\"==\",user.uid)\r\n        .onSnapshot( async (snapshot) => {\r\n          const userInfo = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n\r\n          // 검색결과가 없다면?\r\n          if(userInfo[0] == null){\r\n            const newUser = {\r\n              userId: user.uid,\r\n              lat: null,\r\n              lng: null,\r\n              createdAt: Date.now(),\r\n              name: null,\r\n              phoneNumber: null,\r\n              isMale: null,\r\n            }\r\n            await dbService.collection(\"user\").add(newUser);\r\n            await dbService\r\n            .collection(\"user\")\r\n            .where(\"userId\",\"==\",user.uid)\r\n            .onSnapshot( async (snapshot) => {\r\n              userInfo = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n              }));\r\n            });\r\n            setUserObj(userInfo[0]);\r\n          } else {\r\n            // 검색결과\r\n            setUserObj(userInfo[0]);\r\n          }\r\n        });\r\n      }else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n\r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n      {init ? \r\n        <Routes isLoggedIn={Boolean(userObj)} userObj={userObj}/> :\r\n        \"Initializing...\"\r\n      }\r\n    </>\r\n    );\r\n  \r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './Style/index.scss';\r\nimport Main from './Pages/Main';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}