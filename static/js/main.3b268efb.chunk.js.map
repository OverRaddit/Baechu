{"version":3,"sources":["fbase.js","Components/GNB/index.js","Components/Header/index.js","Components/Card/index.js","Pages/Home.js","Components/Mapexample.js","Components/MapSearch.js","Pages/Login.js","Pages/Routes.js","Pages/Main.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","setPersistence","Auth","Persistence","SESSION","firebaseInstance","authService","dbService","GNB","isLoggedIn","className","tabular","to","onClick","signOut","Header","tableList","name","size","icon","type","placeholder","fluid","map","item","i","Item","key","Card","images","list","src","alt","desc","categories","Home","useState","setInit","currentUser","setIsLoggedIn","useEffect","onAuthStateChanged","user","card","kakao","window","Map","searchPlace","userObj","infowindow","maps","InfoWindow","zIndex","location","setLocation","lat","setLat","lng","setLng","edit","setEdit","onSubmit","event","a","preventDefault","doc","id","update","userId","uid","createdAt","Date","now","collection","add","userLocation","container","document","getElementById","LatLng","console","log","options","center","level","displayMarker","place","marker","Marker","position","y","x","addListener","setContent","place_name","open","getPosition","getLat","getLng","close","services","Places","keywordSearch","data","status","pagination","Status","OK","bounds","LatLngBounds","length","extend","setBounds","value","readOnly","required","style","width","height","MapSearch","setPlace","input","setInput","onChange","target","Login","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","prev","autocomplete","for","href","Routes","basename","process","exact","path","component","Main","init","setUserObj","where","onSnapshot","snapshot","userInfo","docs","Boolean","getFullYear","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3b268efb.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAfqV5djtFo724NgMvdr9lMuRdW8lhHG9k\",\r\n  authDomain: \"baechu-e1beb.firebaseapp.com\",\r\n  databaseURL: \"https://baechu-e1beb.firebaseio.com\",\r\n  projectId: \"baechu-e1beb\",\r\n  storageBucket: \"baechu-e1beb.appspot.com\",\r\n  messagingSenderId: \"1076266227992\",\r\n  appId: \"1:1076266227992:web:27b0ba14cc01459df8666d\",\r\n  measurementId: \"G-GK4XSNZSFV\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React from 'react';\r\nimport List from 'semantic-ui-react/dist/commonjs/collections/Menu';\r\nimport Sticky from 'semantic-ui-react/dist/commonjs/modules/Sticky';\r\nimport {Link} from 'react-router-dom'\r\nimport './index.scss';\r\nimport { authService } from '../../fbase';\r\n\r\n//const menuList = [\"JoIn US\", \"LOGIN\", \"MY PAGE\", \"BOARD\", \"Q&A\"];\r\n//const menuUrl = [\"/Join\", \"/Login\", \"/My_page\", \"/Board\", \"/QnA\"];\r\n\r\nconst GNB = ({isLoggedIn}) => {\r\n    const onLogOutClick = () => authService.signOut();\r\n    return(\r\n        <div className=\"GNB\"> \r\n           <Sticky>\r\n                <List className=\"GNB__Inner\" tabular>\r\n                {isLoggedIn?\r\n                        <Link className=\"item\" to=\"/My_page\">MY PAGE</Link>:\r\n                        <Link className=\"item\" to=\"/Login\">JoIn&Login</Link>\r\n                    }\r\n                    <Link className=\"item\" to=\"/Board\">BOARD</Link>\r\n                    <Link className=\"item\" to=\"/Q&A\">Q&A</Link>\r\n                    {isLoggedIn && <button className=\"item\" onClick={onLogOutClick}>Log Out</button> }    \r\n                </List>\r\n            </Sticky>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GNB;\r\n\r\n// {menuList.map((item, i) => <List.Item key={i}>{item}</List.Item>)}\r\n\r\n/*\r\n{isLoggedIn?\r\n                        <Link className=\"item\" to=\"/My_page\">MY PAGE</Link>:\r\n                        <Link className=\"item\" to=\"/Login\">JoIn&Login</Link>\r\n                    }\r\n                    <Link className=\"item\" to=\"/Board\">BOARD</Link>\r\n                    <Link className=\"item\" to=\"/Q&A\">Q&A</Link>\r\n                    {isLoggedIn && <button className=\"item\" onClick={onLogOutClick}>Log Out</button> }\r\n                    */","import React from 'react';\r\nimport Icon from 'semantic-ui-react/dist/commonjs/elements/Icon';\r\nimport Input from 'semantic-ui-react/dist/commonjs/elements/Input';\r\nimport List from 'semantic-ui-react/dist/commonjs/collections/Menu';\r\n\r\nimport './index.scss';\r\n\r\nconst Header = ({tableList}) => {\r\n  return (\r\n    <>\r\n        <div className=\"Header\">\r\n            <div className=\"Header__Inner\">\r\n                <Icon className=\"menu\" name='bars' size=\"big\"/>\r\n                <span>배추터</span>\r\n                <Input \r\n                    icon={<Icon name='search' />}\r\n                    type='text'\r\n                    name='search'\r\n                    placeholder={\"search\"}\r\n                    fluid\r\n                />\r\n            </div>\r\n        \r\n        </div>\r\n        <List className=\"table\">\r\n            {tableList.map((item, i)=> <List.Item key={i}>{item.name}</List.Item>)}\r\n        </List>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Icon from 'semantic-ui-react/dist/commonjs/elements/Icon';\r\n\r\nimport \"./index.scss\";\r\n\r\nconst Card = ({item}) => {\r\n\r\n    const {name, images} = item;\r\n\r\n    return (\r\n        <div className=\"Card\">\r\n            <div className=\"Card__header\">\r\n                <span>{name}</span>\r\n                <span>전체보기 <Icon name=\"angle right\" /></span>\r\n            </div>\r\n            <div className=\"Card__content\">\r\n                {images.map((list,i) => \r\n                    <div className=\"Card_content__item\" key={i}>\r\n                        <img className=\"Card__content__item__img\" key={i} src={list.src} alt=\"test\"/>\r\n                        <div className=\"Card__content__item__desc\">{list.desc}</div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport GNB from \"../Components/GNB\";\r\nimport Header from \"../Components/Header\";\r\nimport Card from \"../Components/Card\";\r\nimport { authService } from 'fbase';\r\n// 백엔드 존재시 통신해서 가져올 데이터 (dummy data)\r\nconst categories = [\r\n  { \r\n    name:\"우리동네 취미\",\r\n    images:[\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n    ]\r\n  }, \r\n  { \r\n    name:\"홈취미 & DIY 키트\", \r\n    images:[\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n    ]\r\n  },\r\n  { \r\n    name:\"BEST\", \r\n    images:[\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n    ]\r\n  },\r\n]\r\n\r\nconst Home = () => {\r\n // const [contextRef, setContextRef] = React.useState(null);\r\n  //const handleContextRef = ref => setContextRef(ref);\r\n\r\n  const [init, setInit] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\r\n  useEffect( ()=>{\r\n    authService.onAuthStateChanged( (user) => {\r\n      if (user){\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <GNB isLoggedIn={isLoggedIn}/>\r\n      <Header tableList={categories}/>\r\n      {categories.map((card,i) => <Card key={i} item={card} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\"\r\n\r\nconst { kakao } = window\r\nconst Map = ({ searchPlace,userObj }) => {\r\n    let infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n    const [location,setLocation] = useState(\"\");\r\n    const [lat,setLat] = useState(\"\");\r\n    const [lng,setLng] = useState(\"\");\r\n    const [edit,setEdit] = useState(false);\r\n\r\n    const onSubmit = async(event) => {\r\n        if((lat === \"\") || (lng === \"\")){\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        if(edit){\r\n            // 위치를 수정하는 로직\r\n            await dbService.doc(`user/${userObj.id}`).update({\r\n                lat,\r\n                lng\r\n            });\r\n            \r\n        } else {\r\n            // 위치 정보를 처음 추가하는 로직\r\n            const user = {\r\n                userId: userObj.uid,\r\n                lat,\r\n                lng,\r\n                createdAt: Date.now(),\r\n            }\r\n            await dbService.collection(\"user\").add(user);\r\n        }\r\n\r\n        setLat(\"\");\r\n        setLng(\"\");\r\n        setLocation(\"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        const container = document.getElementById(\"mymap\");\r\n        \r\n        let userLocation;\r\n        if (userObj.lat === \"\" || userObj.lng === \"\"){\r\n            userLocation = new kakao.maps.LatLng(33.450701, 126.570667);\r\n            console.log(\"기본맵을출력\");\r\n        } else {\r\n            userLocation =new kakao.maps.LatLng(\r\n                userObj.lat,\r\n                userObj.lng\r\n                );\r\n            console.log(\"사용자의 위치를 중심으로\");\r\n            // 사용자는 이미 위치를 저장했으니 수정모드로 변환한다!\r\n            setEdit(true);\r\n        }\r\n        \r\n        const options = {\r\n            center: userLocation,\r\n            level: 3,\r\n            };\r\n       \r\n        const map = new kakao.maps.Map(container, options);\r\n\r\n        // 장소 검색 객체를 생성\r\n        const ps = new kakao.maps.services.Places(); \r\n\r\n        // 키워드로 장소를 검색\r\n        ps.keywordSearch(searchPlace, placesSearchCB);\r\n\r\n        // 키워드 검색 완료 시 호출되는 콜백함수\r\n        function placesSearchCB (data, status, pagination) {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n                // LatLngBounds 객체에 좌표를 추가\r\n                let bounds = new kakao.maps.LatLngBounds();\r\n\r\n                for (let i=0; i<data.length; i++) {\r\n                    displayMarker(data[i]);    \r\n                    bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n                }       \r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정\r\n                map.setBounds(bounds);\r\n            } \r\n        }\r\n        \r\n        // 지도에 마커를 표시하는 함수\r\n        function displayMarker(place) {\r\n            \r\n            // 마커를 생성하고 지도에 표시\r\n            let marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: new kakao.maps.LatLng(place.y, place.x) \r\n            });\r\n        \r\n\r\n            // 클릭이벤트\r\n            kakao.maps.event.addListener(marker, 'click', function() {\r\n                infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\r\n                infowindow.open(map, marker);\r\n\r\n                // 위치 정보 등록\r\n                setLocation(place.place_name);\r\n                setLat(marker.getPosition().getLat());\r\n                setLng(marker.getPosition().getLng());\r\n            });\r\n            kakao.maps.event.addListener(marker, 'mouseover', function() {\r\n                infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\r\n                infowindow.open(map, marker);\r\n            });\r\n            kakao.maps.event.addListener(marker, 'mouseout', function() {\r\n                infowindow.close();\r\n            });\r\n            \r\n\r\n        }\r\n        console.log(userObj);\r\n    }, [searchPlace])\r\n    \r\n    \r\n    \r\n  return (\r\n      <>\r\n        <h1>위치정보 입력 Form</h1>\r\n         <form onSubmit={onSubmit}>\r\n             <input type=\"text\" value={location} readOnly required/>\r\n             {edit ? (\r\n                <input type=\"submit\" value=\"현재 위치로 수정\"/>\r\n             ) : (\r\n                <input type=\"submit\" value=\"해당위치 저장(현재저장x)\"/>\r\n             )\r\n            }  \r\n         </form>\r\n        <div \r\n         id=\"mymap\"\r\n         style={{ \r\n                width: '700px', \r\n                height: '500px'\r\n         }}\r\n        />\r\n        <br></br>\r\n\r\n     </>\r\n  );\r\n}\r\nexport default Map;","import React, { useState } from \"react\";\r\nimport Map from './Mapexample'\r\n\r\n\r\nconst MapSearch = ({ userObj }) => {\r\n    const [place, setPlace] = useState(\"\");\r\n    const [input, setInput] = useState(\"\");\r\n    const [userInfo, setUserInfo] = useState(\"\");\r\n    const onChange = (event) => {\r\n       const {\r\n           target: {value},\r\n       } = event;\r\n       setInput(value);\r\n    }\r\n\r\n    const onSubmit = (event) =>{\r\n        if(input === \"\"){\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        setPlace(input);\r\n        setInput(\"\");\r\n    } \r\n    return (\r\n        <div>\r\n            <Map searchPlace={place} userObj={userObj}/>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                name=\"input\"\r\n                placeholder = \"장소를 검색해주세요!\"\r\n                type = \"text\"\r\n                onChange={onChange}\r\n                value={input}\r\n                />\r\n            \r\n                <button type=\"submit\">검색</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MapSearch;","import { authService, dbService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { firebaseInstance } from \"../fbase\";\r\n\r\nimport '../Style/login.css';\r\nimport MapSearch from '../Components/MapSearch'\r\n\r\nconst Login =() =>{\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if (name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                //join Logic\r\n                data = await authService.createUserWithEmailAndPassword(email,password);\r\n            } else{\r\n                //log in Logic\r\n                data = await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n    }\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <section className=\"login-form\">\r\n            <span onClick={toggleAccount}>\r\n                <h1>{(newAccount) ? \"JOIN\" : \"LOGIN\"}</h1>\r\n            </span>\r\n            <h2>{error}</h2> <br></br>\r\n            <form onSubmit = {onSubmit}>\r\n                <div className=\"int-area\">\r\n                    <input type=\"text\" name=\"email\" id=\"id\"\r\n                    autocomplete=\"off\" onChange={onChange} required/>\r\n                    <label for=\"id\"> USER NAME</label>\r\n                 </div>\r\n                <div className=\"int-area\">\r\n                    <input type=\"password\" name=\"password\" id=\"pw\"\r\n                    autocomplete=\"off\" onChange={onChange} required/>\r\n                    <label for=\"pw\"> PASSWORD</label>\r\n                </div>\r\n                <div className=\"btn-area\">\r\n                    <button type=\"submit\">{(newAccount) ? \"Join\" : \"Login\"}</button> <br/><br/>\r\n                </div>\r\n            </form>\r\n            <div className=\"caption\">\r\n                 <a href=\"\"> Forgot Password?</a>\r\n            </div>\r\n            <button type=\"submit\" onClick={onSocialClick} name=\"google\">by Google</button> <br/><br/>\r\n            <button type=\"submit\" onClick={onSocialClick} name=\"github\">by Github </button>\r\n            </section>\r\n            <MapSearch />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\n// improt 페이지 목록\r\n// 현재는 디자인 틀만 잡아놔서 메인 페이지만 존재\r\n// 추후 작업을 통해 로그인 및 다른 페이지 생성 예정\r\n\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport MapSearch from '../Components/MapSearch'\r\n\r\nconst Routes = ({isLoggedIn, userObj}) => {\r\n  return (\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <Switch>\r\n      {isLoggedIn ? (\r\n        <>\r\n        <Route exact path=\"/\">\r\n          <Home/>\r\n        </Route>\r\n        <Route exact path=\"/My_page\">\r\n          <MapSearch userObj={userObj}/>\r\n        </Route> \r\n        <Route exact path=\"/Board\" component={MapSearch} />\r\n        <Route exact path=\"/Q&A\" component={Login} />\r\n        </>\r\n      ) : (\r\n        <Route exact path=\"/\">\r\n          <Login/>\r\n        </Route>\r\n      \r\n      )}\r\n      \r\n    </Switch>\r\n  </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;","import React, { useEffect, useState } from 'react';\r\nimport {authService, dbService} from \"../fbase\";\r\nimport Routes from \"./Routes\"\r\n\r\nfunction Main() {\r\n  const[init, setInit] = useState(false)\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect( () =>{\r\n    authService.onAuthStateChanged(async(user) =>{\r\n      if(user){\r\n        // collection에 있는 user목록에서 uid가 일치하는 것을 찾아 가져온다.\r\n        await dbService\r\n        .collection(\"user\")\r\n        .where(\"userId\",\"==\",user.uid)\r\n        .onSnapshot( (snapshot) => {\r\n          const userInfo = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n          setUserObj(userInfo[0]);\r\n          console.log(userInfo[0]);\r\n        });\r\n      }else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n      {init ? <Routes isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing...\"}\r\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\r\n    </>\r\n    );\r\n  \r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './Style/index.scss';\r\nimport Main from './Pages/Main';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}