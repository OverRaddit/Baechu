{"version":3,"sources":["Components/Sidebar/profile.png","Images/baechu.png","Images/profile.png","Images/board.png","fbase.js","Components/Sidebar/Sidebar.js","Components/GNB/index.js","Components/Header/index.js","Components/Card/index.js","Components/Card/index2.js","Pages/Home.js","Pages/Login.js","Components/Layout/index.js","Components/TweetBox/Tweet.js","Components/TweetBox/TweetFactory.js","Components/ViewClub/index.js","Components/MyPageInfo/index.js","Pages/MyPage.js","Components/InfoBox/Mapexample.js","Components/InfoBox/MapSearch.js","Components/InfoBox/index.js","Pages/UserInfo.js","Components/Distance.js","Components/BoardCard/index.js","Pages/Board.js","Components/CreateClub/index.js","Components/TweetBox/createBoard.js","Pages/Routes.js","Pages/Main.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","setPersistence","Auth","Persistence","SESSION","firebaseInstance","authService","dbService","storageService","Sidebar","className","type","id","for","href","src","imgfile","alt","GNB","isLoggedIn","history","useHistory","tabular","label","link","map","item","i","Item","key","onClick","push","withRouter","categories","contextRef","name","size","logo","icon","placeholder","fluid","context","url","Card","images","list","desc","Card2","attachmentUrl","creator","width","height","distance","to","kakao","window","Home","userObj","useState","clubs","setClubs","currentUser","setIsLoggedIn","useEffect","onAuthStateChanged","user","collection","onSnapshot","snapshot","clubArray","docs","doc","getDistance","data","lat","lng","console","log","linePath","maps","LatLng","Polyline","path","getLength","toFixed","card","Login","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","prev","autoComplete","required","htmlFor","Layout","children","React","setContextRef","ref","Tweet","tweetObj","creatorId","text","readOnly","style","backgroundImage","TweetFactory","clubObj","tweet","setTweet","attachment","setAttachment","userName","displayName","userPhotoURL","photoURL","attachmentRef","child","userId","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","uid","club","add","accept","File","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","faTimes","ViewClub","match","ClubObj","setClubObj","tweets","setTweets","isMember","setIsMember","where","params","clubName","orderBy","tweetArray","e","memberInfo","member","0","MyPageInfo","logo2","Mypage","Map","searchPlace","infowindow","InfoWindow","zIndex","location","setLocation","setLat","setLng","update","userLocation","container","document","getElementById","options","center","level","ps","services","Places","Geocoder","displayMarker","place","marker","Marker","position","y","x","addListener","mouseEvent","setContent","place_name","open","getPosition","getLat","getLng","close","keywordSearch","status","pagination","Status","OK","bounds","LatLngBounds","length","extend","setBounds","MapSearch","setPlace","input","setInput","InfoBox","title","option","UserInfo","SetDisplayName","updateProfile","Distance","setDistance","mapContainer","mapOption","strokeWeight","strokeColor","strokeOpacity","strokeStyle","BoardCard","likeArr","handleLike","likeList","handleUnLike","index","infiniteScroll","debounce","Math","max","documentElement","scrollHeight","body","ceil","scrollTop","clientHeight","addEventListener","removeEventListener","onDeleteClick","ok","confirm","delete","refFromURL","includes","color","Board","cardArr","setCardArr","setLikeArr","standard","setStandard","setLikeList","likeArray","like","Array","boardId","boardArray","board","concat","temp","likeData","filter","CreateClub","setName","setDesc","fileRef","newClub","maxLength","theFile","CreateBoard","setBoard","boardObj","Routes","basename","process","exact","component","Main","init","setInit","setUserObj","userInfo","newUser","phoneNumber","isMale","Boolean","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d72d1d3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.8feff939.png\";","module.exports = __webpack_public_path__ + \"static/media/baechu.dd9575f5.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.3d459500.png\";","module.exports = __webpack_public_path__ + \"static/media/board.39306019.png\";","import * as firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAfqV5djtFo724NgMvdr9lMuRdW8lhHG9k\",\r\n  authDomain: \"baechu-e1beb.firebaseapp.com\",\r\n  databaseURL: \"https://baechu-e1beb.firebaseio.com\",\r\n  projectId: \"baechu-e1beb\",\r\n  storageBucket: \"baechu-e1beb.appspot.com\",\r\n  messagingSenderId: \"1076266227992\",\r\n  appId: \"1:1076266227992:web:27b0ba14cc01459df8666d\",\r\n  measurementId: \"G-GK4XSNZSFV\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React from 'react';\r\nimport \"./Sidebar.scss\";\r\nimport imgfile from './profile.png';\r\n\r\nconst Sidebar = () => {\r\n\r\n    return (\r\n    <div className=\"all\">\r\n        <input type=\"checkbox\" id=\"check\"/>\r\n        <header>\r\n            <label for=\"check\">\r\n                <i className=\"fas fa-bars\" id=\"sidebar_btn\"></i>\r\n            </label>\r\n            <div className=\"left_area\">\r\n                <h3>배추터</h3>\r\n            </div>\r\n            <div className=\"right_area\">\r\n                <a href=\"#\" className=\"logout_btn\">Logout</a>\r\n            </div>\r\n        </header>\r\n        <div className=\"sidebar\">\r\n            <center>\r\n                <img src={imgfile} className=\"profile_image\" alt=\"userpic\" />\r\n                <h4>user_name</h4>\r\n            </center>\r\n            <a href=\"#\"><i className=\"fas fa-home\"></i><span>HOME</span></a>\r\n            <a href=\"#\"><i className=\"fas fa-user-circle\"></i><span>마이페이지</span></a>\r\n            <a href=\"#\"><i className=\"fas fa-comments\"></i><span>내 채팅</span></a>\r\n            <a href=\"#\"><i className=\"fas fa-headset\"></i><span>고객센터</span></a>\r\n            <a href=\"#\"><i className=\"fas fa-sliders-h\"></i><span>Settings</span></a>\r\n        </div>\r\n        <div className=\"content\"></div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport List from 'semantic-ui-react/dist/commonjs/collections/Menu';\r\n\r\n/*\r\nconst menuList = [\r\n  {label:\"JOIN US\", link:\"/\"},\r\n  {label:\"LOGIN\", link:\"/\"},\r\n  {label:\"M PAGE\", link:\"/mypage\"},\r\n  {label:\"BOARD\", link:\"/board\"},\r\n  {label:\"Q&A\", link:\"/\"},\r\n];\r\n*/\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport './index.scss';\r\nimport { authService } from '../../fbase';\r\nimport Sidebar from 'Components/Sidebar/Sidebar';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst GNB = ({isLoggedIn}) => {\r\n    let history = useHistory();\r\n    const menuList = [\r\n        {label:\"JOIN US\", link:\"/\"},\r\n        {label:\"LOGIN\", link:\"/\"},\r\n        {label:\"M PAGE\", link:\"/mypage\"},\r\n        {label:\"BOARD\", link:\"/board\"},\r\n        {label:\"Q&A\", link:\"/\"},\r\n      ];\r\n      const menuList2 = [\r\n        {label:\"M PAGE\", link:\"/mypage\"},\r\n        {label:\"BOARD\", link:\"/board\"},\r\n        {label:\"Q&A\", link:\"/\"},\r\n      ];\r\n    const onLogOutClick = () => authService.signOut();\r\n    return(\r\n        <div className=\"GNB\" >\r\n        <List className=\"GNB__Inner\" tabular>\r\n            {\r\n                menuList.map((item, i) => <List.Item key={i} onClick={() => history.push(`${item.link}`)}>{item.label}</List.Item>)\r\n            }\r\n        </List>\r\n       </div>\r\n        /*\r\n        <div className=\"GNB\">\r\n            <List className=\"GNB__Inner\" tabular>\r\n            {isLoggedIn?\r\n                    (<>\r\n                        <Link className=\"item\" to=\"/Mypage\">MY PAGE</Link>\r\n                        <Link className=\"item\" to=\"/createClub\">createClub</Link>\r\n                    </>):\r\n                    <Link className=\"item\" to=\"/Login\">JoIn&Login</Link>\r\n                }\r\n                <Link className=\"item\" to=\"/Board\">BOARD</Link>\r\n                <Link className=\"item\" to=\"/Q&A\">Q&A</Link>\r\n\r\n                {isLoggedIn && <button className=\"item\" onClick={onLogOutClick}>Log Out</button> }    \r\n            </List>\r\n        </div>\r\n        */\r\n    )\r\n}\r\nexport default GNB;","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Sticky from 'semantic-ui-react/dist/commonjs/modules/Sticky';\r\nimport Icon from 'semantic-ui-react/dist/commonjs/elements/Icon';\r\nimport Input from 'semantic-ui-react/dist/commonjs/elements/Input';\r\nimport List from 'semantic-ui-react/dist/commonjs/collections/Menu';\r\n\r\nimport './index.scss';\r\n\r\nimport logo from \"../../Images/baechu.png\"\r\n\r\n\r\nconst Header = ({categories, contextRef, history}) => {\r\n  return (\r\n      <>\r\n        <div className=\"Header\">\r\n            <div className=\"Header__Inner\">\r\n                <Icon className=\"menu\" name='bars' size=\"big\"/>\r\n                <div className=\"Header__Inner__center\" onClick={() => history.push('/')}>\r\n                  <span>배추터</span>\r\n                  <img src={logo} />\r\n                </div>\r\n                <Input\r\n                    icon={<Icon name='search' />}\r\n                    type='text'\r\n                    name='search'\r\n                    placeholder={\"USER 검색\"}\r\n                    fluid\r\n                />\r\n            </div>\r\n        </div>\r\n        <Sticky context={contextRef}>\r\n          <List className=\"table\">\r\n            {categories.map((item, i)=> <List.Item key={i} onClick={()=> history.push(item.url)}>{item.name}</List.Item>)}\r\n          </List>\r\n        </Sticky>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\nimport Icon from 'semantic-ui-react/dist/commonjs/elements/Icon';\r\n\r\nimport \"./index.scss\";\r\n\r\nconst Card = ({item}) => {\r\n\r\n    const {name, images} = item;\r\n\r\n    return (\r\n        <div className=\"Card\">\r\n            <div className=\"Card__header\">\r\n                <span>{name}</span>\r\n                <span>전체보기 <Icon name=\"angle right\" /></span>\r\n            </div>\r\n            <div className=\"Card__content\">\r\n                {images.map((list,i) =>\r\n                    <div className=\"Card_content__item\" key={i}>\r\n                        <img className=\"Card__content__item__img\" key={i} src={list.src} alt=\"testtest\"/>\r\n                        <div className=\"Card__content__item__desc\">{list.desc}</div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Icon from 'semantic-ui-react/dist/commonjs/elements/Icon';\r\n\r\nimport \"./index.scss\";\r\n\r\nconst Card2 = ({item}) => {\r\n\r\n    const {name, attachmentUrl, desc, creator} = item;\r\n    return (\r\n        \r\n        <div className=\"Card\">\r\n            <div className=\"Card__header\">\r\n                <span>동아리 모음집</span>\r\n                <span>전체보기 <Icon name=\"angle right\" /></span>\r\n            </div>\r\n            <div className=\"Card__content\">\r\n            {item.map((list,i) => \r\n                <div className=\"Card_content__item\" key={i}>\r\n                    <img width=\"300px\" height=\"300px\" className=\"Card__content__item__img\" src={list.attachmentUrl} alt=\"test\"/>\r\n                    <div className=\"Card__content__item__desc\">\r\n                        {list.desc}\r\n                        <br/>\r\n                        {list.distance} Km\r\n                    </div>\r\n                    <Link to={`/viewClub/${list.name}`}><span>{list.name}</span></Link>\r\n                </div>\r\n            )}\r\n            </div>\r\n        </div>\r\n        /*\r\n        <div className=\"Card\">\r\n            <div className=\"Card__header\">\r\n            <Link to={`/viewClub/${name}`}><span>{name}</span></Link>\r\n            </div>\r\n            <div className=\"Card__content\">\r\n                <div className=\"Card_content__item\">\r\n                    <img className=\"Card__content__item__img\" src={attachmentUrl} alt=\"test\"/>\r\n                    <div className=\"Card__content__item__desc\">{desc}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        */\r\n    );\r\n}\r\n\r\nexport default Card2;","import React, { useEffect, useState } from 'react';\r\n\r\nimport GNB from \"../Components/GNB\";\r\nimport Header from \"../Components/Header\";\r\nimport Card from \"../Components/Card\";\r\nimport { authService, dbService } from 'fbase';\r\nimport Card2 from 'Components/Card/index2';\r\nimport Sidebar from 'Components/Sidebar/Sidebar';\r\nimport { Sticky } from 'semantic-ui-react';\r\n\r\n\r\n\r\n// 백엔드 존재시 통신해서 가져올 데이터 (dummy data)\r\nconst categories = [\r\n  {\r\n    name:\"우리동네 취미\",\r\n    images:[\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n    ]\r\n  },\r\n  {\r\n    name:\"개설\",\r\n    images:[\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"},\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"}\r\n    ],\r\n    url: \"/createClub\",\r\n  },\r\n  {\r\n    name:\"내가 찜한 게시물\",\r\n    images:[\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"}\r\n\r\n    ]\r\n  },\r\n  {\r\n    name:\"게시글 작성\",\r\n    images:[\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"}\r\n\r\n    ],\r\n    url: \"/createBoard\",\r\n  },\r\n]\r\nconst { kakao } = window;\r\n\r\n\r\nconst Home = ({ userObj }) => {\r\n  // 이렇게 형태를 지정하지 않은 Object는 출력도 안되고 입력도 안된다. map은 먹히던데 그건 왜 되는건지 모르겠음.\r\n  // 니코쌤이 뭐라 하셨던거 같기도 한데 찾아봐야 겠다.\r\n  const [clubs,setClubs] = useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\r\n  const [distance,setDistance] = useState(\"\");\r\n  \r\n  useEffect( ()=>{\r\n    authService.onAuthStateChanged( (user) => {\r\n      if (user){\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n      //setInit(true);\r\n    });\r\n\r\n    // 어느 순서로 가져와야 할지 미정.\r\n    dbService.collection(\"club\")\r\n      .onSnapshot((snapshot)=>{\r\n\r\n        const clubArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          //distance: getDistance(doc.lat, doc.lng),\r\n          distance: getDistance(doc.data().lat,doc.data().lng),\r\n          ...doc.data(),\r\n        }));\r\n        console.log(clubArray);\r\n        setClubs(clubArray);\r\n      });\r\n  }, []);\r\n\r\n  const getDistance = ( lat,lng ) => {\r\n    \r\n    var linePath = [\r\n      new kakao.maps.LatLng(userObj.lat, userObj.lng),\r\n      new kakao.maps.LatLng(lat, lng)\r\n    ];\r\n    var polyline = new kakao.maps.Polyline({\r\n        path: linePath,\r\n    });\r\n    var distance = (polyline.getLength())/1000;\r\n    return distance.toFixed(2);\r\n  };\r\n    \r\n  return (\r\n    <>\r\n    <div className=\"Home\">\r\n      <Sticky>\r\n        <GNB isLoggedIn={isLoggedIn} />\r\n      </Sticky>\r\n      <Header categories={categories}/>\r\n      \r\n      <Card2 item={clubs} />\r\n      {categories.map((card,i) => <Card key={i} item={card} />)}\r\n      \r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { firebaseInstance } from \"../fbase\";\r\n\r\nimport '../Style/login.css';\r\n\r\nconst Login =() =>{\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    //const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if (name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            if(newAccount){\r\n                //join Logic\r\n                await authService.createUserWithEmailAndPassword(email,password);\r\n            } else{\r\n                //log in Logic\r\n                await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n    }\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <section className=\"login-form\">\r\n            <span onClick={toggleAccount}>\r\n                <h1>{(newAccount) ? \"JOIN\" : \"LOGIN\"}</h1>\r\n            </span>\r\n            <h2>{error}</h2>\r\n            <div className=\"cabbage\">\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/765/765618.svg\"/>\r\n            </div>\r\n            <form onSubmit = {onSubmit}>\r\n                <div className=\"int-area\">\r\n                    <input type=\"text\" name=\"email\" id=\"id\"\r\n                    autoComplete=\"off\" onChange={onChange} required/>\r\n                    <label htmlFor=\"id\"> USER NAME</label>\r\n                 </div>\r\n                <div className=\"int-area\">\r\n                    <input type=\"password\" name=\"password\" id=\"pw\"\r\n                    autoComplete=\"off\" onChange={onChange} required/>\r\n                    <label htmlFor=\"pw\"> PASSWORD</label>\r\n                </div>\r\n                <div className=\"btn-area\">\r\n                    <button type=\"submit\">{(newAccount) ? \"Join\" : \"Login\"}</button> <br/><br/>\r\n                </div>\r\n            </form>\r\n            <div className=\"caption\">\r\n                 <a href=\"\"> Forgot Password?</a>\r\n            </div>\r\n            <button type=\"submit\" onClick={onSocialClick} name=\"google\">by Google</button> <br/><br/>\r\n            <button type=\"submit\" onClick={onSocialClick} name=\"github\">by Github </button>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, { useEffect, useState } from 'react';\r\n\r\nimport GNB from \"../GNB\";\r\nimport Header from \"../Header\";\r\nimport Card from \"../Card\";\r\nimport { dbService } from 'fbase';\r\n\r\n// 백엔드 존재시 통신해서 가져올 데이터 (dummy data)\r\nconst categories = [\r\n  {\r\n    name:\"우리동네 취미\",\r\n    images:[\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n    ]\r\n  },\r\n  {\r\n    name:\"개설\",\r\n    images:[\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"},\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"}\r\n    ],\r\n    url: \"/createClub\",\r\n  },\r\n  {\r\n    name:\"내가 찜한 게시물\",\r\n    images:[\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"}\r\n\r\n    ]\r\n  },\r\n  {\r\n    name:\"게시글 작성\",\r\n    images:[\r\n      {src:\"images/test1.png\", desc:\"[가방 만들기] 비즈, 뜨개질, 코바늘 무료 드림\"},\r\n      {src:\"images/test.jpg\", desc:\"[손수건 만들기] kit 봉사 후원\"},\r\n      {src:\"images/test2.png\", desc:\"[뜨개질] 직접 만드는 목도리\"}\r\n\r\n    ],\r\n    url: \"/createBoard\",\r\n  },\r\n]\r\n\r\nconst Layout = ({children}) => {\r\n  const [contextRef, setContextRef] = React.useState(null);\r\n  const handleContextRef = ref => setContextRef(ref);\r\n  const [club,setClubs] = useState(\"\");\r\n  \r\n  useEffect( () => {\r\n    // 어느 순서로 가져와야 할지 미정.\r\n    dbService.collection(\"club\")\r\n      .onSnapshot((snapshot)=>{\r\n        const clubArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setClubs(clubArray);\r\n        console.log(clubArray[0]);\r\n\r\n        // 자 한번 해봅시다.\r\n        categories[0] = \r\n          { \r\n            name:\"우리동네 취미\",\r\n            images:[\r\n                {src:clubArray[0].attachmentUrl, desc: clubArray[0].desc},\r\n                {src:clubArray[1].attachmentUrl, desc: clubArray[1].desc},\r\n                {src:clubArray[2].attachmentUrl, desc: clubArray[2].desc},\r\n            ]\r\n          }\r\n        console.log(categories);\r\n      });\r\n    }, []);\r\n  return (\r\n    <>\r\n    <div className=\"Home\" ref={handleContextRef}>\r\n      <GNB/>\r\n      <Header categories={categories} contextRef={contextRef}/>\r\n      {children}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport './posting_style.scss';\r\nconst Tweet = ({ tweetObj }) => {\r\n\r\n    return(\r\n        <div className=\"tweetbody\">\r\n        <form >\r\n            <section className=\"input_text\">\r\n                \r\n                <div className=\"cabbage\">\r\n                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/765/765618.svg\"/>\r\n                </div>\r\n                <div className=\"profile\">\r\n                    { false ? (\r\n                        <img src={tweetObj.attachmentUrl} alt=\"userphotoURL\" width=\"100px\" height=\"100px\"/>\r\n                    ) : (\r\n                        <a href=\"#\">\r\n                        <i className=\"fas fa-user-circle profile fa-3x\"/>\r\n                    </a>\r\n                    )}\r\n                \r\n                </div>\r\n\r\n                <div className=\"user_name\">\r\n                    <h3>{tweetObj.creatorId}</h3>\r\n                </div>\r\n\r\n                <div>\r\n                    <textarea \r\n                        placeholder=\"당신의 멋진 취미는 무엇인가요?\"\r\n                        value={tweetObj.text}\r\n                        type=\"text\"\r\n                        readOnly\r\n                    />\r\n                </div>\r\n\r\n                {tweetObj.attachmentUrl && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                        src={tweetObj.attachmentUrl}\r\n                        style={{\r\n                            backgroundImage: tweetObj.attachmentUrl,\r\n                        }}\r\n                        width = \"200px\" height = \"150px\"\r\n                        />\r\n                    </div>\r\n                )}\r\n            </section>\r\n        </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tweet;","import { authService,dbService,storageService } from 'fbase';\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport React, { useState } from 'react';\r\nimport './posting_style.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory= ({clubObj}) => {\r\n    const userObj = authService.currentUser;\r\n    const [tweet, setTweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    // 닉네임 존재시 출력, 없을 시 이메일을 이름으로;\r\n    const userName = authService.currentUser.displayName ?\r\n        authService.currentUser.displayName:\r\n        authService.currentUser.email;\r\n    const userPhotoURL = authService.currentUser.photoURL;\r\n    \r\n    const onSubmit = async(event) => {\r\n        // 사진이나 트윗 모두 비어있다면 작동x\r\n        if(tweet === \"\" && attachment === \"\")\r\n            return;\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            // 사진을 storage에 업로드, response에서 업로드된 url을 찾아 attachmentUrl에 저장\r\n            const attachmentRef = storageService.ref().child(`${userObj.userId}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment,\"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        const tweetObj = {\r\n            text: tweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n            club: clubObj.name,\r\n        }\r\n        await dbService.collection(\"tweets\").add(tweetObj);\r\n        setTweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value}\r\n        } = event;\r\n        setTweet(value);\r\n    }\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const File = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const{\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(File);\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return(\r\n        <div className=\"tweetbody\">\r\n        <form onSubmit={onSubmit}>\r\n            <section className=\"input_text\">\r\n                <h1>게시물 작성</h1>\r\n                <div className=\"cabbage\">\r\n                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/765/765618.svg\"/>\r\n                </div>\r\n                {\r\n                    //프사를 클릭하면 user정보를 보는 폼으로 넘어가게!\r\n                }\r\n                <div className=\"profile\">\r\n                    { userPhotoURL ? (\r\n                        <img src={userPhotoURL} alt=\"userphotoURL\" width=\"100px\" height=\"100px\"/>\r\n                    ) : (\r\n                        <a href=\"#\">\r\n                        <i className=\"fas fa-user-circle profile fa-3x\"/>\r\n                    </a>\r\n                    )}\r\n                    \r\n                    \r\n                </div>\r\n\r\n                <div className=\"user_name\">\r\n                    <h3>{userName}</h3>\r\n                </div>\r\n\r\n                <div>\r\n                    <textarea \r\n                        placeholder=\"당신의 멋진 취미는 무엇인가요?\"\r\n                        value={tweet}\r\n                        onChange={onChange}\r\n                        type=\"text\"\r\n                    />\r\n                    \r\n                </div>\r\n                \r\n                <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                    <span>Add Photo</span>\r\n                    <i className=\"fas fa-images images fa-lg\"></i>\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onFileChange}\r\n                />\r\n\r\n                {attachment && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                        width = \"200px\" height = \"150px\"\r\n                        />\r\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                            <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"btn-area\">\r\n                    <input type=\"submit\" value=\"게시\"/>\r\n                </div>\r\n            </section>\r\n        </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TweetFactory;","import { authService, dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from '../Layout';\r\nimport Tweet from '../TweetBox/Tweet';\r\nimport TweetFactory from '../TweetBox/TweetFactory';\r\nimport \"./Ginfo_style.scss\";\r\nconst ViewClub = ({ match }) => {\r\n    const [ClubObj, setClubObj] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [isMember,setIsMember] = useState(false);\r\n\r\n    useEffect( ()=> {\r\n        dbService.collection(\"club\")\r\n        .where(\"name\",\"==\",match.params.clubName)\r\n        .onSnapshot((snapshot)=>{\r\n            const clubArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n              }));\r\n              setClubObj(clubArray[0]);\r\n        });\r\n\r\n        dbService.collection(\"tweets\")\r\n        .where(\"club\",\"==\",match.params.clubName)\r\n        .orderBy(\"createdAt\",\"desc\")\r\n        .onSnapshot((snapshot)=>{\r\n            const tweetArray = snapshot.docs.map((doc)=>({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setTweets(tweetArray);\r\n            console.log(tweetArray);\r\n        });\r\n        \r\n\r\n        // 로그인한 유저가 동아리의 멤버인지 판단\r\n        dbService.collection(\"member\")\r\n        .where(\"club\",\"==\",match.params.clubName)\r\n        .where(\"member\",\"==\",authService.currentUser.uid)\r\n        .onSnapshot((snapshot)=>{\r\n            const isMember = snapshot.docs.map((doc)=>({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            \r\n            setIsMember(isMember);\r\n        })\r\n\r\n    }, []);\r\n    \r\n    const onSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const memberInfo = {\r\n            club: ClubObj.name,\r\n            member: authService.currentUser.uid\r\n        }\r\n\r\n        await dbService.collection(\"member\").add(memberInfo);\r\n        setIsMember({0: true});\r\n    }\r\n\r\n    return (\r\n        \r\n        <Layout>\r\n            <div className=\"whole\">\r\n                <div className=\"section\">\r\n                    <input type=\"radio\" name=\"slide\" id=\"slide1\"/>\r\n                    <input type=\"radio\" name=\"slide\" id=\"slide2\"/>\r\n                    <input type=\"radio\" name=\"slide\" id=\"slide3\"/>\r\n                    <div className=\"slidewrap\">\r\n                        <ul className=\"slidelist\">\r\n                            <li>\r\n                                <a>\r\n                                    <label htmlFor=\"slide3\" className=\"left\"></label>\r\n                                    <img src={ClubObj.attachmentUrl}/>\r\n                                    <label htmlFor=\"slide2\" className=\"right\"></label>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a>\r\n                                    <label htmlFor=\"slide1\" className=\"left\"></label>\r\n                                    <img src=\"https://www.thepinx.co.kr/images/biotopia/bakery-07-large.jpg\"/>\r\n                                    <label htmlFor=\"slide3\" className=\"right\"></label>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a>\r\n                                    <label htmlFor=\"slide2\" className=\"left\"></label>\r\n                                    <img src=\"https://food.fnr.sndimg.com/content/dam/images/food/fullset/2004/2/11/0/fo1d52_chocolate_tart.jpg.rend.hgtvcom.616.462.suffix/1371584000788.jpeg\"/>\r\n                                    <label htmlFor=\"slide1\" className=\"right\"></label>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <section className=\"input_text\">\r\n                    <div className=\"cabbage\">\r\n                        <img src=\"https://www.flaticon.com/svg/static/icons/svg/765/765618.svg\"/>\r\n                    </div>\r\n                    <div className=\"textbox\">\r\n                        <h1>{ClubObj.name}</h1>\r\n                        \r\n                        <div className=\"name-area\">\r\n                            <i className=\"fas fa-map-marker-alt map\">죽전동</i> \r\n                            { isMember[0] ? \r\n                                // 멤버일 경우 게시글 작성폼\r\n                                <h4> 가입 완료 </h4> : \r\n                                // 멤버가 아닐시 가입버튼\r\n                                <form onSubmit={onSubmit}>\r\n                                        <input type=\"submit\" value=\"가입하기\"/>\r\n                                </form>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"int-area\">\r\n                        <textarea name=\"explain\" value={ClubObj.desc} readOnly/>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n            { isMember[0] ? \r\n                // 멤버일 경우 게시글 작성폼\r\n                <TweetFactory clubObj={ClubObj}/> : \r\n                // 멤버가 아닐시 가입버튼\r\n                <div></div>\r\n            }\r\n            {tweets.map(tweet => (\r\n                <Tweet key={tweet.id} tweetObj={tweet} />\r\n                ))}\r\n        </Layout>\r\n        \r\n    );\r\n}\r\n\r\nexport default ViewClub;\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport './index.scss';\r\n\r\nimport logo from \"../../Images/profile.png\"\r\nimport logo2 from \"../../Images/board.png\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MyPageInfo = () => {\r\n  let history = useHistory();\r\n    return(\r\n      <div className=\"MyPageInfo\">\r\n        <h1><u>MY PAGE</u></h1>\r\n          <div className=\"MyPageInfo__box\">\r\n            <div className=\"MyPageInfo__box__img\">\r\n              <img src={logo} alt=\"프로필 관리\" />\r\n              <p>주소지 변경</p>\r\n              <button onClick={()=> history.push(\"/userInfo\")}>VIEW MORE</button>\r\n            </div>\r\n            <div className=\"MyPageInfo__box__img\">\r\n              <img src={logo2} alt=\"게시물 관리\" />\r\n              <button>VIEW MORE</button>\r\n              <p>\r\n                내가 쓴글 <br/>\r\n                게시물 작성\r\n              </p>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default MyPageInfo;\r\n","import React from 'react';\r\nimport Sticky from 'semantic-ui-react/dist/commonjs/modules/Sticky';\r\n\r\nimport GNB from \"../Components/GNB\";\r\nimport Header from \"../Components/Header\";\r\nimport Card from \"../Components/Card\";\r\nimport MyPageInfo from \"../Components/MyPageInfo\"\r\nimport Layout from 'Components/Layout';\r\n\r\nconst Mypage = ({ userObj }) => {\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <MyPageInfo userObj={userObj}/>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mypage;","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\"\r\nimport \"./index.scss\";\r\n\r\nconst { kakao } = window\r\nconst Map = ({ searchPlace,userObj }) => {\r\n    let infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n    const [location,setLocation] = useState(\"\");\r\n    const [lat,setLat] = useState(\"\");\r\n    const [lng,setLng] = useState(\"\");\r\n\r\n    const onSubmit = async(event) => {\r\n        if((lat === \"\") || (lng === \"\")){\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        \r\n        await dbService.doc(`user/${userObj.id}`).update({\r\n            lat,\r\n            lng\r\n        });\r\n        setLat(\"\");\r\n        setLng(\"\");\r\n        setLocation(\"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        const container = document.getElementById(\"mymap\");\r\n        let userLocation;\r\n        \r\n        if (userObj.lat === null || userObj.lng === null){\r\n            userLocation = new kakao.maps.LatLng(33.450701, 126.570667);\r\n            console.log(\"기본맵을출력\");\r\n        } else {\r\n            userLocation =new kakao.maps.LatLng(\r\n                userObj.lat,\r\n                userObj.lng\r\n                );\r\n            console.log(\"사용자의 위치를 중심으로\");\r\n            console.log(userObj.lat);\r\n            console.log(userObj.lng);\r\n        }\r\n        \r\n        const options = {\r\n            center: userLocation,\r\n            level: 3,\r\n            };\r\n       \r\n        const map = new kakao.maps.Map(container, options);\r\n\r\n        // 장소 검색 객체를 생성\r\n        const ps = new kakao.maps.services.Places(); \r\n\r\n        // 주소-좌표 변환 객체를 생성합니다\r\n        var geocoder = new kakao.maps.services.Geocoder();\r\n\r\n        // 키워드로 장소를 검색\r\n        ps.keywordSearch(searchPlace, placesSearchCB);\r\n\r\n        // 키워드 검색 완료 시 호출되는 콜백함수\r\n        function placesSearchCB (data, status, pagination) {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n                // LatLngBounds 객체에 좌표를 추가\r\n                let bounds = new kakao.maps.LatLngBounds();\r\n\r\n                for (let i=0; i<data.length; i++) {\r\n                    displayMarker(data[i]);    \r\n                    bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n                }       \r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정\r\n                map.setBounds(bounds);\r\n            } \r\n        }\r\n        /*\r\n        // 주소 가져오는 부분\r\n        kakao.maps.event.addListener(map, 'click', function(mouseEvent) {\r\n            searchDetailAddrFromCoords(mouseEvent.latLng, function(result, status) {\r\n                if (status === kakao.maps.services.Status.OK) {\r\n                    var detailAddr = !!result[0].road_address ? '<div>도로명주소 : ' + result[0].road_address.address_name + '</div>' : '';\r\n                    detailAddr += '<div>지번 주소 : ' + result[0].address.address_name + '</div>';\r\n                    \r\n                    var content = '<div class=\"bAddr\">' +\r\n                                    '<span class=\"title\">법정동 주소정보</span>' + \r\n                                    detailAddr + \r\n                                '</div>';\r\n        \r\n                    // 마커를 클릭한 위치에 표시합니다 \r\n                    marker.setPosition(mouseEvent.latLng);\r\n                    marker.setMap(map);\r\n        \r\n                    // 인포윈도우에 클릭한 위치에 대한 법정동 상세 주소정보를 표시합니다\r\n                    infowindow.setContent(content);\r\n                    infowindow.open(map, marker);\r\n                }   \r\n            });\r\n        });\r\n        */\r\n        // 지도에 마커를 표시하는 함수\r\n        function displayMarker(place) {\r\n            \r\n            // 마커를 생성하고 지도에 표시\r\n            let marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: new kakao.maps.LatLng(place.y, place.x) \r\n            });\r\n        \r\n\r\n            // 클릭이벤트\r\n            kakao.maps.event.addListener(marker, 'click', function(mouseEvent) {\r\n                infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\r\n                infowindow.open(map, marker);\r\n\r\n                // 위치 정보 등록\r\n                setLocation(place.place_name);\r\n                setLat(marker.getPosition().getLat());\r\n                setLng(marker.getPosition().getLng());\r\n            });\r\n            kakao.maps.event.addListener(marker, 'mouseover', function() {\r\n                infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\r\n                infowindow.open(map, marker);\r\n            });\r\n            kakao.maps.event.addListener(marker, 'mouseout', function() {\r\n                infowindow.close();\r\n            });\r\n\r\n        }\r\n        function searchDetailAddrFromCoords(coords, callback) {\r\n            // 좌표로 법정동 상세 주소 정보를 요청합니다\r\n            geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);\r\n        }\r\n    }, [searchPlace])\r\n    \r\n  return (\r\n      <>\r\n        <div className=\"InfoBox__input\">\r\n            <div className=\"InfoBox__input__address\"><input/> - <button>우편번호</button></div>\r\n                <input/><span>기본주소</span><br/>\r\n                <input/><span>나머지 주소</span>\r\n            \r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"text\" value={location} readOnly required/>\r\n                <input type=\"submit\" value=\"현재 위치로 저장\"/>\r\n            </form>\r\n            <div \r\n            id=\"mymap\"\r\n            style={{ \r\n                    width: '700px', \r\n                    height: '500px'\r\n            }}\r\n            />\r\n            <br></br>\r\n        </div>\r\n     </>\r\n  );\r\n}\r\nexport default Map;","import React, { useState } from \"react\";\r\nimport Map from './Mapexample'\r\n\r\n\r\nconst MapSearch = ({ userObj }) => {\r\n    const [place, setPlace] = useState(\"\");\r\n    const [input, setInput] = useState(\"\");\r\n    const onChange = (event) => {\r\n       const {\r\n           target: {value},\r\n       } = event;\r\n       setInput(value);\r\n    }\r\n\r\n    const onSubmit = (event) =>{\r\n        if(input === \"\"){\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        setPlace(input);\r\n        setInput(\"\");\r\n    } \r\n    return (\r\n        <div>\r\n            <Map searchPlace={place} userObj={userObj}/>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                name=\"input\"\r\n                placeholder = \"장소를 검색해주세요!\"\r\n                type = \"text\"\r\n                onChange={onChange}\r\n                value={input}\r\n                />\r\n            \r\n                <button type=\"submit\">검색</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MapSearch;","import MapSearch from 'Components/InfoBox/MapSearch';\r\nimport React from 'react';\r\n\r\nimport \"./index.scss\";\r\n\r\nconst InfoBox = ({userObj, title, desc, option}) => {\r\n  return(\r\n    <div className=\"InfoBox\">\r\n      <div className={option === \"address\" ? \"InfoBox__title__address\" : \"InfoBox__title\"}>\r\n        {title}\r\n      </div>\r\n\r\n      {option === 'phone' && \r\n        <div className=\"InfoBox__input__call\">\r\n          <input/> - <input/> - <input/>\r\n        </div>\r\n      }\r\n\r\n      {option === \"address\" &&\r\n        <MapSearch userObj={userObj}/>\r\n      }\r\n      {option === \"gender\" &&\r\n        <div className=\"InfoBox__input\">\r\n          <label><input type=\"radio\" />남성</label>\r\n          <label><input type=\"radio\" />여성</label>\r\n        </div>\r\n      }\r\n      {option === \"birth\" && <div className=\"InfoBox__input\"><input /><span>8자리 ex)20000524</span></div>}\r\n\r\n      {option !== \"phone\" && option !== \"address\" && option !== \"gender\" &&\r\n        <form className=\"InfoBox__input\">\r\n          <input type=\"text\" value={userObj}/><span>{desc}</span>\r\n          <input type=\"submit\" value=\"적용\" />\r\n        </form>\r\n      }\r\n    </div>\r\n)}\r\n\r\nexport default InfoBox;","import React, { useState } from 'react';\r\nimport GNB from \"../Components/GNB\";\r\nimport Header from \"../Components/Header\";\r\nimport InfoBox from \"../Components/InfoBox\";\r\nimport Layout from \"../Components/Layout\";\r\nimport \"../Style/info.scss\";\r\nimport \"../Components/InfoBox/index.scss\";\r\nimport { authService } from 'fbase';\r\nconst UserInfo = ({userObj}) => {\r\n  const [displayName,SetDisplayName] = useState(authService.currentUser.displayName);\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n\r\n  const onChange = (event) => {\r\n    const {target: {name, value}} = event;\r\n    if(name === \"displayName\"){\r\n        SetDisplayName(value);\r\n    } else if (name === \"password\"){\r\n        //setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n        target: {files},\r\n    } = event;\r\n    const File = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n        const{\r\n            currentTarget: {result},\r\n        } = finishedEvent;\r\n        setAttachment(result);\r\n    }\r\n    reader.readAsDataURL(File);\r\n}\r\n\r\n  const onSubmit = async(event) => {\r\n    event.preventDefault();\r\n    const {target: {name, value}} = event;\r\n\r\n    if(name === \"displayName\"){\r\n      authService.currentUser.updateProfile({\r\n        displayName: displayName,\r\n        photoURL: \"https://example.com/jane-q-user/profile.jpg\"\r\n      });\r\n      console.log(authService.currentUser.displayName);\r\n    } else if(name === \"attachment\"){\r\n      console.log(\"asdf\");\r\n      authService.currentUser.updateProfile({\r\n        photoURL: attachment,\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n    <div className=\"UserInfo\">\r\n      \r\n      <h2>HOME>회원정보수정</h2>\r\n      <h1 className=\"normal__info\">기본정보</h1>\r\n      <div>\r\n        <div className=\"InfoBox\">\r\n          <div className=\"InfoBox__title\">\r\n            닉네임\r\n          </div>\r\n          <form name=\"displayName\" onSubmit={onSubmit} className=\"InfoBox__input\">\r\n            <input type=\"text\" onChange={onChange} name=\"displayName\" value={displayName}/><span></span>\r\n            <input type=\"submit\" value=\"적용\" />\r\n          </form>\r\n        </div>\r\n        <InfoBox title={\"주소\"} option={\"address\"} userObj={userObj}/>\r\n      </div>\r\n      {\r\n        /*\r\n        <InfoBox title={\"현재 비밀번호\"} />\r\n        <InfoBox title={\"비밀번호\"} />\r\n        <InfoBox title={\"비밀번호확인\"} />\r\n        \r\n        \r\n        <InfoBox title={\"휴대전화\"} option={\"phone\"}/>\r\n        <InfoBox title={\"주소\"} option={\"address\"} userObj={userObj}/>\r\n      <div className=\"InfoBox\">\r\n          <div className=\"InfoBox__title\">\r\n            프로필 사진\r\n          </div>\r\n          <form name=\"attachment\" onSubmit={onSubmit} className=\"InfoBox__input\">\r\n            <img src={attachment} width = \"200px\" height = \"150px\" onChange={onChange} name=\"attachment\" value={attachment}/><span></span>\r\n          \r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} /><span></span>\r\n            <input type=\"submit\" value=\"적용\" />\r\n          </form>\r\n        </div>\r\n\r\n\r\n      <h1 className=\"additional__info\">추가정보</h1>\r\n      <div>\r\n        <InfoBox title={\"성별\"} option={\"gender\"}/>\r\n        <InfoBox title={\"생년월일\"} option={\"birth\"}/>\r\n      </div>\r\n      */\r\n      }\r\n    </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default UserInfo;","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst { kakao } = window\r\n\r\n\r\nconst Distance = ({ userObj, clubObj}) => {\r\n    const [distance,setDistance] = useState(\"\");\r\n\r\n    useEffect(()=> {\r\n        var mapContainer = document.getElementById('map'), // 지도를 표시할 div  \r\n        mapOption = { \r\n        center: new kakao.maps.LatLng(33.452344169439975, 126.56878163224233), // 지도의 중심좌표\r\n        level: 3 // 지도의 확대 레벨\r\n        };\r\n\r\n        var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\r\n\r\n        var linePath = [\r\n            // 하나는 사용자의 위치정보\r\n            new kakao.maps.LatLng(33.452344169439975, 126.56878163224233),\r\n\r\n            // 나머지 하나는 해당 동아리의 위치정보\r\n            new kakao.maps.LatLng(33.452739313807456, 126.5709308145358)\r\n        ];\r\n\r\n        var polyline = new kakao.maps.Polyline({\r\n            path: linePath, // 선을 구성하는 좌표배열 입니다\r\n            strokeWeight: 5, // 선의 두께 입니다\r\n            strokeColor: '#FFAE00', // 선의 색깔입니다\r\n            strokeOpacity: 0.7, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n            strokeStyle: 'solid' // 선의 스타일입니다\r\n        });\r\n        //polyline.setMap(map);\r\n\r\n        var distance = polyline.getLength();\r\n        console.log(distance);\r\n        setDistance(distance);\r\n    },[]);\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"map\" style={{width:\"100%\",height:\"350px\" }}></div>  \r\n            <p>\r\n                <em>지도를 마우스로 클릭하면 선 그리기가 시작되고<br/>오른쪽 마우스를 클릭하면 선 그리기가 종료됩니다</em>\r\n            </p>\r\n            {distance} 이다!\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Distance;","import React from 'react';\r\nimport produce from 'immer';\r\nimport debounce from 'lodash/debounce';\r\nimport Icon from 'semantic-ui-react/dist/commonjs/elements/Icon';\r\n\r\nimport \"./index.scss\";\r\nimport { authService, dbService, storageService } from 'fbase';\r\n\r\nconst BoardCard = ({card, likeArr, likeList, handleLike, handleUnLike, index}) => {\r\n  const [isLike, setIsLike] = React.useState(false);\r\n\r\n  const infiniteScroll = debounce(() => {\r\n    const scrollHeight = Math.max(\r\n      document.documentElement.scrollHeight,\r\n      document.body.scrollHeight,\r\n    );\r\n\r\n    // scrollTop은 소수점이 발생하여 올림 적용\r\n    const scrollTop = Math.ceil(Math.max(\r\n      document.documentElement.scrollTop,\r\n      document.body.scrollTop,\r\n    ));\r\n\r\n    const { clientHeight } = document.documentElement;\r\n    // if (scrollTop + clientHeight + 50 > scrollHeight) ;\r\n  }, 100);\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('scroll', infiniteScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', infiniteScroll);\r\n    };\r\n  }, []);\r\n\r\n  const onDeleteClick = async ({card}) => {\r\n    const ok = window.confirm(\"정말로 이 게시글을 삭제하시겠어요?\");\r\n    console.log(ok);\r\n    if(ok){\r\n        await dbService.doc(`board/${card.id}`).delete();\r\n        if(card.attachmentUrl)\r\n          await storageService.refFromURL(card.attachmentUrl).delete();\r\n    }\r\n}\r\n\r\n  return (\r\n    <div className=\"BoardCard\">\r\n    {likeArr.includes(card)  ?\r\n        <Icon name='heart' size=\"big\" color=\"green\" onClick={()=> handleUnLike({id: card.id})}/> :\r\n          <Icon name='heart outline' size=\"big\" color=\"green\" onClick={()=> handleLike({card})}/>\r\n    }\r\n\r\n    {card.creatorId == authService.currentUser.uid  ?\r\n        <Icon name='trash alternate' size=\"big\" color=\"green\" onClick={()=> onDeleteClick({card})}/> : <div></div>\r\n    }\r\n      <img src={card.attachmentUrl?card.attachmentUrl:\"images/test1.png\"} alt=\"이미지\"/>\r\n      <div className=\"BoardCard__text\">{card.text}</div>\r\n    </div>\r\n  )\r\n}\r\n// likeList.includes(card)\r\n/*\r\n<Icon name='trash alternate' size=\"big\" color=\"green\" onClick={()=> handleLike({card})}/>\r\n*/\r\nexport default BoardCard;","import React, { useState } from \"react\";\r\nimport Layout from 'Components/Layout';\r\nimport BoardCard from \"Components/BoardCard\";\r\n\r\nimport \"../Style/board.scss\"\r\nimport { dbService } from \"fbase\";\r\n\r\nconst Board = ({userObj}) => {\r\n  const [cardArr, setCardArr] = React.useState([]);\r\n  const [likeArr, setLikeArr] = React.useState([]);\r\n  const [standard, setStandard] = React.useState('');\r\n  const [likeList, setLikeList] = useState([]);\r\n\r\n  const getLikeList = () =>{\r\n    // user가 좋아요표시한 게시글을 가져와 likeArr에 넣는다.\r\n    dbService.collection(\"like\")\r\n    .where(\"userId\",\"==\",userObj.userId)\r\n    .onSnapshot((snapshot=>{\r\n      const likeArray = snapshot.docs.map((doc)=>({\r\n        id: doc.id,\r\n        like: true,\r\n        ...doc.data(),\r\n      }));\r\n      // 이걸 바꿔야할듯\r\n      var likeList = new Array();\r\n      likeArray.map((like)=>{\r\n        likeList.push(like.boardId);\r\n      });\r\n      setLikeList(likeList);\r\n\r\n      dbService.collection(\"board\")\r\n      .orderBy(\"createdAt\",\"desc\")\r\n      .onSnapshot((snapshot)=>{\r\n      const boardArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      console.log(likeList);\r\n      boardArray.map((board)=>{\r\n        // 사용자의 좋아요글 리스트에 해당 글이 포함되지 않는다면 추가하라.\r\n        if(likeList.includes(board.id)){\r\n          setLikeArr(prev => prev.concat(board));\r\n        }\r\n      });\r\n        setCardArr(boardArray);\r\n        console.log(likeArr);\r\n      });\r\n    }));\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getLikeList();\r\n    \r\n  },[]);\r\n\r\n  const handleLike = async({card}) => {\r\n      if(!likeList.includes(card)) {\r\n        const temp = card;\r\n        temp.like = true;\r\n        setLikeList(prev => prev.concat(temp));\r\n\r\n        // 좋아요 document를 생성한다.\r\n        const likeData = {userId: userObj.userId, boardId: card.id}\r\n        dbService.collection(\"like\").add(likeData); \r\n      }\r\n  }\r\n\r\n  const handleUnLike = async({id}) => {\r\n    setLikeArr(prev => prev.filter(item => item.id !== id));\r\n    /*\r\n    const likeData = await dbService\r\n            .collection(\"like\")\r\n            .where(\"boardID\",\"==\",id)\r\n            .where(\"userID\",\"==\",userObj.userId)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n    likeData.docs.map((doc) => doc.data())\r\n    await dbService.doc(`like/${nweetObj.id}`).delete();\r\n    */\r\n  }\r\n\r\n  const handleChange = e => {\r\n    setStandard(e.target.value);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Layout>\r\n      <div className=\"Board\">\r\n        <h1>우리동네취미</h1>\r\n        <p>\r\n          집 주변에서 소규모로 즐기는 취미활동\r\n        </p>\r\n        <div className=\"Board__inner\">\r\n          <select value={standard} onChange={handleChange}>\r\n            <option value=\"\">-정렬방식-</option>\r\n            <option value=\"최근순\">최근순</option>\r\n            <option value=\"좋아요\">좋아요</option>\r\n          </select>\r\n          <br></br>\r\n          <div className=\"Board__inner__Cards\">\r\n            {standard === '좋아요' ?\r\n            likeArr.map((item,i) =>\r\n            <BoardCard\r\n                key={i}\r\n                card={item}\r\n                likeArr={likeArr}\r\n                likeList={likeList}\r\n                handleLike={handleLike}\r\n                handleUnLike={handleUnLike}\r\n                />)\r\n            :(cardArr || []).map((item, i) =>\r\n              <BoardCard\r\n                key={i}\r\n                card={item}\r\n                likeArr={likeArr}\r\n                handleLike={handleLike}\r\n                handleUnLike={handleUnLike}\r\n                />\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </Layout>\r\n  );\r\n}\r\n\r\nexport default Board;","import { useState } from \"react\";\r\nimport React from 'react';\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './group_style.scss';\r\nimport GNB from \"Components/GNB\";\r\nimport Header from \"Components/Header\";\r\nimport Layout from \"Components/Layout\";\r\n\r\nconst CreateClub = ( {userObj} ) => {\r\n    const [name,setName] = useState(\"\");\r\n    const [desc,setDesc] = useState(\"\");\r\n    const [attachment,setAttachment] = useState();\r\n    \r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name,value},\r\n        } = event;\r\n        if(name === \"name\"){\r\n            setName(value);\r\n        } else if(name === \"desc\"){\r\n            setDesc(value);\r\n        } \r\n    }\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        // 사진을 storage에 저장한다.\r\n        const fileRef = storageService.ref().child(`ClubImage/${uuidv4()}`);\r\n        const response = await fileRef.putString(attachment, \"data_url\");\r\n        const attachmentUrl = await response.ref.getDownloadURL();\r\n        // newClub document를 추가해준다.\r\n        const newClub = {\r\n            creator: userObj.userId,\r\n            name,\r\n            desc,\r\n            attachmentUrl,\r\n            lat: userObj.lat,\r\n            lng: userObj.lng,\r\n            createdAt: Date.now(),\r\n          }\r\n        await dbService.collection(\"club\").add(newClub);\r\n        document.location.href = \"../\"\r\n    }\r\n    const onFileChange = (event) =>{\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            // 첨부된 파일의 url정보를 attachment 변수에 저장\r\n            const {\r\n                currentTarget: {result}\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => {\r\n        setAttachment(null);\r\n    }\r\n\r\n    return (\r\n    <Layout>\r\n    <div>\r\n        <br></br>\r\n        <div className=\"all\">\r\n            <section className=\"input_text\"> \r\n            <form onSubmit={onSubmit}>\r\n                <h1>동아리 만들기</h1>\r\n                <div className=\"cabbage\">\r\n                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/765/765618.svg\"/>\r\n                </div>\r\n                {attachment &&\r\n                    <div>\r\n                        <img src={attachment} id='output' width=\"150px\" height=\"150px\"/>\r\n                        <input type=\"button\" onClick={onClearAttachment} value=\"사진 지우기\"/>\r\n                    </div>\r\n                }\r\n                <div className=\"name-area\">\r\n                    <label htmlFor=\"name\"> 동아리 이름</label>\r\n                    <input\r\n                    name=\"name\"\r\n                    value={name} onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder = \"클럽명을 적어주세요!\" maxLength={120}\r\n                    autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"int-area\">\r\n                    <textarea\r\n                    name=\"desc\"\r\n                    value={desc}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder = \"동아리에 대한 설명을 해주세요!\"\r\n                    maxLength={250}\r\n                    />\r\n                </div>\r\n                \r\n                <div className=\"name-area\">\r\n                    <label>동아리 이미지</label><i className=\"fas fa-map-marker-alt map\"></i>\r\n                    <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n                </div>\r\n\r\n                <div className=\"btn-area\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n            </form>\r\n            </section>\r\n        </div>\r\n    </div>\r\n    </Layout>\r\n    );\r\n}\r\n\r\nexport default CreateClub;","import { authService,dbService,storageService } from 'fbase';\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport React, { useState } from 'react';\r\nimport './posting_style.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Layout from 'Components/Layout';\r\n\r\nconst CreateBoard= () => {\r\n    const userObj = authService.currentUser;\r\n    const [board, setBoard] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    // 닉네임 존재시 출력, 없을 시 이메일을 이름으로;\r\n    const userName = authService.currentUser.displayName ?\r\n        authService.currentUser.displayName:\r\n        authService.currentUser.email;\r\n    const userPhotoURL = authService.currentUser.photoURL;\r\n    \r\n    const onSubmit = async(event) => {\r\n        // 사진이나 트윗 모두 비어있다면 작동x\r\n        if(board === \"\" && attachment === \"\")\r\n            return;\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            // 사진을 storage에 업로드, response에서 업로드된 url을 찾아 attachmentUrl에 저장\r\n            const attachmentRef = storageService.ref().child(`${userObj.userId}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment,\"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        const boardObj = {\r\n            text: board,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n            like: [],\r\n        }\r\n        await dbService.collection(\"board\").add(boardObj);\r\n        setBoard(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value}\r\n        } = event;\r\n        setBoard(value);\r\n    }\r\n    \r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const File = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const{\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(File);\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    \r\n    return(\r\n        <Layout>\r\n        <div className=\"whole\">\r\n        <form onSubmit={onSubmit}>\r\n            <section className=\"input_text\">\r\n                <h1>게시물 작성</h1>\r\n                <div className=\"cabbage\">\r\n                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/765/765618.svg\"/>\r\n                </div>\r\n                \r\n                <div className=\"profile\">\r\n                    { userPhotoURL ? (\r\n                        <img src={userPhotoURL} alt=\"userphotoURL\" width=\"100px\" height=\"100px\"/>\r\n                    ) : (\r\n                        <a href=\"#\">\r\n                        <i className=\"fas fa-user-circle profile fa-3x\"/>\r\n                    </a>\r\n                    )}\r\n                    \r\n                    \r\n                </div>\r\n\r\n                <div className=\"user_name\">\r\n                    <h3>{userName}</h3>\r\n                </div>\r\n                \r\n                <div>\r\n                    <textarea \r\n                        placeholder=\"당신의 멋진 취미는 무엇인가요?\"\r\n                        value={board}\r\n                        onChange={onChange}\r\n                        type=\"text\"\r\n                    />\r\n                    \r\n                </div>\r\n                \r\n                <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                    <span>Add Photo</span>\r\n                    <i className=\"fas fa-images images fa-lg\"></i>\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onFileChange}\r\n                />\r\n\r\n                {attachment && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                        width = \"200px\" height = \"150px\"\r\n                        />\r\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                            <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"btn-area\">\r\n                    <input type=\"submit\" value=\"게시\"/>\r\n                </div>\r\n            </section>\r\n        </form>\r\n        </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\n/*\r\n<Layout>\r\n        <div className=\"all\">\r\n        <form onSubmit={onSubmit} className=\"all\">\r\n            <section className=\"input_text\">\r\n                <h1>게시물 작성</h1>\r\n                <div className=\"cabbage\">\r\n                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/765/765618.svg\"/>\r\n                </div>\r\n                \r\n                <div className=\"profile\">\r\n                    { userPhotoURL ? (\r\n                        <img src={userPhotoURL} alt=\"userphotoURL\" width=\"100px\" height=\"100px\"/>\r\n                    ) : (\r\n                        <a href=\"#\">\r\n                        <i className=\"fas fa-user-circle profile fa-3x\"/>\r\n                    </a>\r\n                    )}\r\n                    \r\n                    \r\n                </div>\r\n\r\n                <div className=\"user_name\">\r\n                    <h3>{userName}</h3>\r\n                </div>\r\n                \r\n                <div>\r\n                    <textarea \r\n                        placeholder=\"당신의 멋진 취미는 무엇인가요?\"\r\n                        value={board}\r\n                        onChange={onChange}\r\n                        type=\"text\"\r\n                    />\r\n                    \r\n                </div>\r\n                \r\n                <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                    <span>Add Photo</span>\r\n                    <i className=\"fas fa-images images fa-lg\"></i>\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onFileChange}\r\n                />\r\n\r\n                {attachment && (\r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                        width = \"200px\" height = \"150px\"\r\n                        />\r\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                            <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"btn-area\">\r\n                    <input type=\"submit\" value=\"게시\"/>\r\n                </div>\r\n            </section>\r\n        </form>\r\n        </div>\r\n        </Layout>\r\n*/\r\n\r\nexport default CreateBoard;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport ViewClub from 'Components/ViewClub';\r\nimport Mypage from './MyPage';\r\nimport UserInfo from './UserInfo';\r\nimport GNB from 'Components/GNB';\r\nimport Header from 'Components/Header';\r\nimport Distance from 'Components/Distance';\r\nimport Board from './Board';\r\nimport Sidebar from 'Components/Sidebar/Sidebar';\r\nimport CreateClub from 'Components/CreateClub';\r\nimport CreateBoard from 'Components/TweetBox/createBoard';\r\n\r\nconst Routes = ({isLoggedIn, userObj}) => {\r\n  return (\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <Switch>\r\n      {isLoggedIn ? (\r\n        <>\r\n        <Route exact path=\"/\">\r\n          <Home userObj={userObj}/>\r\n        </Route>\r\n\r\n        <Route exact path=\"/Mypage\">\r\n          <Mypage userObj={userObj}/>\r\n        </Route>\r\n\r\n        <Route exact path=\"/userInfo\">\r\n          <UserInfo userObj={userObj}/>\r\n        </Route>\r\n\r\n        <Route exact path=\"/sidebar\">\r\n          <GNB isLoggedIn={userObj} />\r\n          <Header />\r\n          <Sidebar/>\r\n        </Route>\r\n        \r\n        <Route exact path=\"/createClub\">\r\n          <CreateClub userObj={userObj}/>\r\n        </Route> \r\n\r\n        <Route exact path=\"/viewClub/:clubName\" component={ViewClub} >\r\n    \r\n        </Route>\r\n\r\n        <Route exact path=\"/distance\">\r\n          <Distance />\r\n        </Route>\r\n\r\n        <Route exact path=\"/Board\">\r\n          <Board userObj={userObj}/>\r\n        </Route>\r\n\r\n        <Route exact path=\"/createBoard\">\r\n          <CreateBoard />\r\n        </Route>\r\n\r\n        <Route exact path=\"/Q&A\"/>\r\n        </>\r\n      ) : (\r\n        <Route exact path=\"/\">\r\n          <Login/>\r\n        </Route>\r\n      \r\n      )}\r\n      \r\n    </Switch>\r\n  </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;","import React, { useEffect, useState } from 'react';\r\nimport {authService, dbService} from \"../fbase\";\r\nimport Routes from \"./Routes\"\r\nimport Sticky from 'semantic-ui-react/dist/commonjs/modules/Sticky';\r\n\r\nconst Main=() => {\r\n  const[init, setInit] = useState(false)\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect( () =>{\r\n    authService.onAuthStateChanged(async(user) =>{\r\n      if(user){\r\n        await dbService\r\n        .collection(\"user\")\r\n        .where(\"userId\",\"==\",user.uid)\r\n        .onSnapshot( async (snapshot) => {\r\n          var userInfo = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n\r\n          // 검색결과가 없다면?\r\n          if(userInfo[0] == null){\r\n            const newUser = {\r\n              userId: user.uid,\r\n              lat: null,\r\n              lng: null,\r\n              createdAt: Date.now(),\r\n              name: null,\r\n              phoneNumber: null,\r\n              isMale: null,\r\n            }\r\n            await dbService.collection(\"user\").add(newUser);\r\n            await dbService\r\n            .collection(\"user\")\r\n            .where(\"userId\",\"==\",user.uid)\r\n            .onSnapshot( async (snapshot) => {\r\n              userInfo = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n              }));\r\n              setUserObj(userInfo[0]);\r\n            });\r\n            \r\n            setInit(true);\r\n            console.log(\"3\");\r\n          } else {\r\n            // 검색결과 존재\r\n            setUserObj(userInfo[0]);\r\n            setInit(true);\r\n            console.log(\"4\");\r\n          }\r\n        });\r\n      }else {\r\n        setUserObj(null);\r\n        console.log(\"1\");\r\n      }\r\n      setInit(true);\r\n      console.log(\"2\");\r\n    });\r\n\r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n      {init ? \r\n        <Routes isLoggedIn={Boolean(userObj)} userObj={userObj}/> :\r\n        \"Initializing...\"\r\n      }\r\n    </>\r\n    );\r\n  \r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './Style/index.scss';\r\nimport Main from './Pages/Main';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}